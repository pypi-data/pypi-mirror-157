{"version":3,"file":"lib_index_js.0094cf24b9661ccb4290.js","mappings":";;;;;;;;;;;;;;;;;AAA+C;AACS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kDAAkD;AACzD;AACA,qBAAqB,+EAA6B;AAClD,uBAAuB,8DAAW;AAClC;AACA;AACA;AACA,yBAAyB,8EAA4B;AACrD;AACA;AACA,kBAAkB,+EAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gFAA8B;AAChD;AACA;AACA;;;;;;;;;;;;;;;;;;;;AClCmD;AACV;AACF;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6DAAU;AACzB;AACA;AACA,QAAQ,oDAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mDAAM;AAC/C;AACA;AACA;AACA,uEAAuE,uBAAuB;AAC9F,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,mDAAmD,QAAQ;AAC3D;AACA,SAAS;AACT;AACA,qFAAqF,OAAO;AAC5F,SAAS;AACT;AACA;AACA,iEAAe,MAAM,EAAC","sources":["webpack://slurm-time/./lib/handler.js","webpack://slurm-time/./lib/index.js"],"sourcesContent":["import { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI(endPoint = '', init = {}) {\n    // Make request to Jupyter API\n    const settings = ServerConnection.makeSettings();\n    const requestUrl = URLExt.join(settings.baseUrl, 'slurm-time', // API Namespace\n    endPoint);\n    let response;\n    try {\n        response = await ServerConnection.makeRequest(requestUrl, init, settings);\n    }\n    catch (error) {\n        throw new ServerConnection.NetworkError(error);\n    }\n    let data = await response.text();\n    if (data.length > 0) {\n        try {\n            data = JSON.parse(data);\n        }\n        catch (error) {\n            console.log('Not a JSON response body.', response);\n        }\n    }\n    if (!response.ok) {\n        throw new ServerConnection.ResponseError(response, data.message || data);\n    }\n    return data;\n}\n","import { IStatusBar } from '@jupyterlab/statusbar';\nimport { Widget } from '@lumino/widgets';\nimport { requestAPI } from './handler';\nfunction formatRemaining(timedelta) {\n    const td = new Date(Date.UTC(0, 0, 0, 0, 0, 0, timedelta));\n    return td.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n    });\n}\n/**\n * Initialization data for the slurm-time extension.\n */\nconst plugin = {\n    id: 'slurm-time:plugin',\n    autoStart: true,\n    requires: [IStatusBar],\n    activate: (app, statusBar) => {\n        console.log('JupyterLab extension slurm-time activated');\n        requestAPI('get_time')\n            .then(data => {\n            if (!data.data) {\n                console.log(\"Could not load slurm time remaining: \" + data.error);\n                return;\n            }\n            else {\n                const endTime = new Date();\n                endTime.setSeconds(endTime.getSeconds() + data.data.remaining);\n                const statusWidget = new Widget();\n                setInterval(() => {\n                    const now = new Date();\n                    const delta = endTime.getTime() - now.getTime();\n                    statusWidget.node.textContent = `Time remaining: ${formatRemaining(delta)}`;\n                }, 1000);\n                statusBar.registerStatusItem('lab-status', {\n                    align: 'middle',\n                    item: statusWidget\n                });\n                console.log(`Session will end at ${endTime}`);\n            }\n        })\n            .catch(reason => {\n            console.error(`The slurm_time server extension appears to be missing.\\n${reason}`);\n        });\n    }\n};\nexport default plugin;\n"],"names":[],"sourceRoot":""}