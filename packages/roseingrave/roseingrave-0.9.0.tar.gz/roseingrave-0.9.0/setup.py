# -*- coding: utf-8 -*-
from setuptools import setup

package_dir = \
{'': 'src'}

packages = \
['roseingrave']

package_data = \
{'': ['*'], 'roseingrave': ['defaults/*']}

install_requires = \
['cachetools==5.2.0',
 'certifi==2022.6.15',
 'charset-normalizer==2.0.12',
 'click==8.1.3',
 'google-auth-oauthlib==0.5.2',
 'google-auth==2.9.0',
 'gspread==5.4.0',
 'idna==3.3',
 'loguru==0.6.0',
 'oauthlib==3.2.0',
 'pyasn1-modules==0.2.8',
 'pyasn1==0.4.8',
 'requests-oauthlib==1.3.1',
 'requests==2.28.0',
 'rsa==4.8',
 'six==1.16.0',
 'urllib3==1.26.9']

entry_points = \
{'console_scripts': ['roseingrave = roseingrave.__main__:cli']}

setup_kwargs = {
    'name': 'roseingrave',
    'version': '0.9.0',
    'description': 'A massively scalable document source comparator, using Google Spreadsheets API + Python.',
    'long_description': '# Roseingrave\n\nMassively scalable musical source comparator.\n\nSee [Getting Started](GettingStarted.md) for a starter guide.\n\n## Credentials\n\nThese scripts interact with Google Sheets through the\n[`gspread` package](https://docs.gspread.org/en/latest/).\nYou can enable an OAuth Client to create, access, and edit spreadsheets with\nyour email.\n\nTo enable the OAuth Client, follow these steps:\n\n1. Go to the [Google Developers Console](https://console.cloud.google.com/).\n2. Create a new project.\n3. Go to the [API Library](https://console.cloud.google.com/apis/library).\n4. In the search bar, search for "Google Drive API", select it, and enable it.\n5. Go back to the API library. In the search bar, search for "Google Sheets\n   API", select it, and enable it.\n6. Go to the\n   [OAuth Consent Screen](https://console.cloud.google.com/apis/credentials/consent)\n   tab.\n7. If prompted, select "External" for the User Type.\n8. On the "App Information" page, enter an app name. Select your email address\n   for the support email. Scroll down to the bottom and enter your email address\n   for the developer contact information. Click "Save and Continue".\n9. On the "Scopes" page, click "Save and Continue".\n10. On the "Test Users" page, add your email address as a user. Click "Save and\n    Continue".\n11. On the summary page, scroll to the bottom and click "Back to Dashboard".\n12. Go to the [Credentials](https://console.cloud.google.com/apis/credentials)\n    tab.\n13. At the top of the page, select "+ Create credentials" > "OAuth client ID".\n14. For the application type, select "Desktop app". Name your credentials.\n    Click "Create". Click "Ok" at the popup.\n15. In the table labeled "OAuth 2.0 Client IDs", locate the credentials you just\n    created. Click the download button at the end of the row.\n16. Rename the file to `"credentials.json"` and place it in the root directory\n    of where you\'ll be running the script. (You can customize this in the\n    [settings](#settings)).\n\nIf you\'ve never authorized the app or if your authorization has expired, you\'ll\nbe given a link in the console for you to visit in order to refresh or create\nan authorization token. Go to the url, select your email, click "Continue",\nallow access to your Drive files and Sheets spreadsheets, click "Continue", copy\nthe authorization code on the final page, and paste it back into the console.\n\nOnce the authorization is successful, the `"authorized_user.json"` file will be\ncreated in the same directory as `"credentials"`.\n\n## Settings\n\nThe `roseingrave.json` file defines alternative names for the input and output\nfiles for the commands. The default configuration can be found\n[here](defaults/roseingrave.json).\n\nEach value can either be a string for the filename, or an array defining the\npath to the file.\n\nFor `"volunteerDataPath"` and `"pieceDataPath"`, you must use `"{email}"` and\n`"{piece}"` respectively in the path exactly once to format the email of the\nvolunteer and the name of the piece respectively.\n\nIn the following, file names/paths will be referenced by its corresponding key.\n\n## Input files\n\n### `"template"`\n\nThe `"template"` file defines the names of rows or columns and other values to\nuse for created spreadsheets. The default values can be found\n[here](defaults/template_definitions.json).\n\nThe `"masterSpreadsheet"` and `"volunteerSpreadsheet"` values define information\nfor the master and volunteer spreadsheets respectively:\n\n- `"folder"`: The id of the Google Drive folder to save the created\n  spreadsheets. A value of `null` means the root folder.\n  - A folder id can be found from the link in the address bar while the folder\n    is open: `https://drive.google.com/drive/folders/FOLDER_ID`. Be sure to\n    remove any unnecessary values after `?`, such as `?resourcekey=`.\n- `"title"`: The title of the spreadsheet.\n- `"publicAccess"`: The public access of the spreadsheet. It can either be\n  `null` (restricted), `"view"`, or `"edit"`. Unknown values will default to\n  `null`.\n- `"shareWith"`: An array of email addresses to give edit access of the\n  spreadsheet to.\n- `"resize"`: Whether the headers column and the source columns should be\n  resized to fit the content.\n\nFor `"volunteerSpreadsheet"` specifically:\n\n- `"title"`: The format of the title, with the format string `"{email}"` (at\n  most once) representing the email of the volunteer.\n- `"shareWithVolunteer"`: Whether the spreadsheet should be shared with the\n  volunteer\'s email.\n\nEach field under `"metaDataFields"` defines the name of each header, which go in\nthe rows above the bars section.\n\nEach field under `"validation"` defines specific values that any of the header\nfields can take. In particular, a value may be a dropdown with a predefined list\nof choices or it may be a checkbox. You must use the corresponding key in\n`"metaDataFields"`. To define these, use the following example format:\n\n```json\n{\n  "validation": {\n    "keySig": {\n      "type": "dropdown",\n      "values": ["C major", "G major", "D major", "A major", "E major"]\n    },\n    "hand": {\n      "type": "checkbox"\n    }\n  }\n}\n```\n\nAlso see [`validation_example.json`](examples/validation_example.json) for a\nlarger example.\n\nEach field under `"commentFields"` has the following meaning:\n\n- `"notes"`: The title of the right-most column, where notes can be left on any\n  of the headers or bars.\n- `"supplementalSources"`: In a piece sheet, the title of a column after\n  `"notes"` that lists all the supplemental sources, if any.\n- `"comments"`: The title of a single row below the bars section, where\n  source-specific comments may be left.\n- `"summary"`: In the master spreadsheet, the title of a column for each source\n  for a summary of all the volunteer inputs.\n\nEach field under `"values"` has the following meaning:\n\n- `"defaultBarCount"`: If no bar counts are given in `"pieces"`, use this value.\n  Must be positive.\n- `"commentsRowHeight"`: The number of pixels to make the height of the comments\n  row. Must be at least 21 (the default height of a row).\n\nIn the future, there will be additional fields for customizing font, font size,\nfont weight, etc.\n\n### `"pieces"`\n\nThe `"pieces"` file defines each piece and the sources for each piece. Each\npiece can have an optional link and bar count. Each source requires a name and a\nlink and also has an optional bar count. The resulting bar section for this\npiece will be the max of all the bar counts given, or a default if no bar counts\nare given.\n\nSources may also be supplemental, meaning that they are listed in an additional\ncolumn to the right of the `"notes"` column, but don\'t get their own column in\npiece sheets. They will also be ignored when exporting spreadsheets.\n\nThe file should have the following format:\n\n```json\n[\n  {\n    "title": "pieceName1",\n    "barCount": 50,\n    "sources": [\n      {\n        "name": "sourceName1",\n        "link": "sourceLink1",\n        "barCount": 100\n      }\n    ]\n  },\n  {\n    "title": "pieceName2",\n    "link": "pieceLink2",\n    "sources": [\n      {\n        "name": "sourceName2",\n        "link": "sourceLink2"\n      },\n      {\n        "name": "supplementalSourceName",\n        "link": "supplementalSourceLink",\n        "supplemental": true\n      }\n    ]\n  }\n]\n```\n\nPieces with repeated names will be treated as a single piece with the first link\nfound and the combination of all their sources. Sources with repeated names will\nhave the max bar count of the given bar counts and will be marked supplemental\nif any of its duplicates are supplemental. Sheets will be created with the order\nof the sources preserved.\n\n### `"volunteers"`\n\nThe `"volunteers"` file defines each volunteer and the pieces for each\nvolunteer.\n\nThe file should have the following format:\n\n<!-- prettier-ignore -->\n```json\n[\n  {\n    "email": "volunteerEmail",\n    "pieces": [\n      "pieceName1",\n      "pieceName2"\n    ]\n  }\n]\n```\n\nVolunteers with repeated emails will be treated as a single volunteer with the\ncombination of all their pieces. Repeated pieces will be ignored after the first\noccurrence. Unknown pieces will be ignored. Spreadsheets will be created with\nthe order of the pieces preserved.\n\n## Output files\n\n### `"spreadsheetsIndex"`\n\nThe `"spreadsheetsIndex"` file defines a mapping from volunteer emails to their\ncorresponding spreadsheet link. It will also have a key of `"MASTER"` for the\nmaster spreadsheet.\n\n### `"volunteerDataPath"`\n\nThe `"volunteerDataPath"` template defines a format for the path of files when\nexporting volunteer data. It will contain an array of objects representing\npieces.\n\n### `"pieceDataPath"`\n\nThe `"pieceDataPath"` template defines a format for the path of files when\nexporting piece data. It will contain compiled information about the piece,\nincluding each volunteer-source pair that have matched this piece.\n\n### `"summary"`\n\nThe `"summary"` file consolidates all the information about pieces into one file\nfor ease of importing to and exporting from the master spreadsheet. It has a\nvery similar format to `"pieceDataPath"` files, except that each source has an\nadditional field `"summary"`, which is a summary column for each source in the\nmaster spreadsheet.\n\n## Commands\n\nRun with `python -m roseingrave <command> [options]`.\n\n### `reauth`\n\nReauthenticate the credentials for your OAuth Client.\n\nNo options.\n\n### `fix_input`\n\nFixes input files.\n\nThe `"template"` file is not supported because it can get very complex; some\nextra options may be due to user error without the user necessarily wanting to\nremove them. The user is suggested instead to heed the warnings whenever the\ntemplate definitions file is read from in order to fix it.\n\nIf a file is not included in `files` but an alternative path is given for it, it\nwill be ignored.\n\nIf there are unresolvable issues, displays warnings and does nothing.\n\n#### Arguments\n\n- `files` (optional, variadic): The files to fix, out of the following options\n  (type a list of the options). If none given, all supported files will be\n  fixed.\n  - `settings`: Remove unknown fields.\n  - `pieces`: Combine repeated pieces, keeping the first link found and the max\n    bar count found, including bar counts of sources. Combine repeated sources\n    for a piece, keeping the first link and the max bar count. Move supplemental\n    sources to the end of the list. Move pieces with only supplemental sources\n    to the end of the list. Remove pieces with no sources. Remove unknown\n    fields.\n  - `volunteers`: Combine repeated emails, keeping the union of all sources\n    found, preserving order. Remove pieces not found in `"pieces"`. Remove\n    volunteers with no pieces. Remove unknown fields.\n  - `spreadsheetsIndex`: Sort all keys, with `"MASTER"` (if exists) at the top.\n    Remove spreadsheets that are not accessible through the user\'s account.\n\n#### Options\n\n- `-pd`: A filepath to replace `"pieces"`.\n- `-vd`: A filepath to replace `"volunteers"`.\n- `-si`: A filepath to replace `"spreadsheetsIndex"`.\n\n### `create_sheet`\n\nCreate volunteer spreadsheets.\n\nRequires `"template"`, `"pieces"`, and `"volunteers"`. Outputs created\nspreadsheet links to `"spreadsheetsIndex"`.\n\nIf any volunteers already exist in `"spreadsheetsIndex"`, they will be skipped.\n\n#### Arguments\n\n- `emails` (optional, variadic): The volunteers to create spreadsheets for.\n  If none given, creates spreadsheets for all volunteers found in\n  `"volunteers"`.\n\n#### Options\n\n- `-r`/`--replace` (flag): Replace existing volunteer spreadsheets.\n  This will not create a new spreadsheet, but will wipe all current content in\n  the existing spreadsheet.\n- `-n`/`--new` (flag): Create new spreadsheets for all volunteers.\n- `-td`: A filepath to replace `"template"`.\n- `-pd`: A filepath to replace `"pieces"`.\n- `-vd`: A filepath to replace `"volunteers"`.\n- `-si`: A filepath to replace `"spreadsheetsIndex"`.\n- `--strict` (flag): Fail on warnings instead of only displaying them.\n\n### `volunteer_summary`\n\nExport volunteer JSON data files.\n\nRequires `"spreadsheetsIndex"` and `"template"`. Outputs created data files to\n`"volunteerDataPath"`, replacing existing files.\n\nIf the spreadsheets don\'t match `"template"`, there is undefined behavior. For\nproper exported data, ensure that the spreadsheets have the correct format.\n\n#### Arguments\n\n- `emails` (optional, variadic): The volunteers to export data for. If none\n  given, exports data for all volunteers found in `"spreadsheetsIndex"`.\n\n#### Options\n\n- `-si`: A filepath to replace `"spreadsheetsIndex"`.\n- `-td`: A filepath to replace `"template"`.\n- `-vdp`: A filepath to replace `"volunteerDataPath"`. Must include `"{email}"`\n  exactly once.\n- `--strict` (flag): Fail on warnings instead of only displaying them.\n\n### `piece_summary`\n\nExport piece JSON data files.\n\nFor most accurate summary, run the `volunteer_summary` command first.\n\nRequires `"volunteerDataPath"`, `"template"`, and `"pieces"`. Reads the existing\nfiles in `"volunteerDataPath"`. Outputs created data files to `"pieceDataPath"`,\nreplacing existing files.\n\nTo create the output files, `"template"` and `"pieces"` will be used to\ndetermine the proper keys and bar counts for each source. Unknown pieces and\nsources will be skipped. Unknown or missing fields will raise warnings.\n\n#### Arguments\n\n- `pieces` (optional, variadic): The pieces to export data for. If none given,\n  exports data for all pieces found when reading the existing files.\n\n#### Options\n\n- `-td`: A filepath to replace `"template"`.\n- `-pd`: A filepath to replace `"pieces"`.\n- `-vdp`: A filepath to replace `"volunteerDataPath"`. Must include `"{email}"`\n  exactly once.\n- `-pdp`: A filepath to replace `"pieceDataPath"`. Must include `"{piece}"`\n  exactly once.\n- `--strict` (flag): Fail on warnings instead of only displaying them.\n\n### `compile_pieces`\n\nCompile all piece JSON data files into a single file.\n\nFor most accurate summary, run the `piece_summary` command first.\n\nRequires `"pieceDataPath"`, `"template"`, and `"pieces"`. Reads the existing\nfiles in `"pieceDataPath"`. Outputs created file to `"summary"`.\n\nTo create the output file, `"template"` and `"pieces"` will be used to determine\nthe proper keys and bar counts for each source. Unknown pieces and sources will\nbe skipped. Unknown or missing fields will raise warnings.\n\n#### Options\n\n- `-td`: A filepath to replace `"template"`.\n- `-pd`: A filepath to replace `"pieces"`.\n- `-pdp`: A filepath to replace `"pieceDataPath"`. Must include `"{piece}"`\n  exactly once.\n- `-s`: A filepath to replace `"summary"`.\n- `--strict` (flag): Fail on warnings instead of only displaying them.\n\n### `import_master`\n\nUpdate the master spreadsheet, or create it if it doesn\'t exist.\n\nNote that this will wipe all current content in the existing spreadsheet. To\nkeep the original spreadsheet, use the `-c` flag, remove the link from\n`"spreadsheetsIndex"`, or make a copy first.\n\nFor most accurate sheet, run the `compile_pieces` or `export_master` command\nfirst.\n\nRequires `"spreadsheetsIndex"`, `"template"`, and `"summary"`. If created,\noutputs the spreadsheet link to `"spreadsheetsIndex"`.\n\n#### Options\n\n- `-c`/`--create`: Create a new master spreadsheet.\n- `-td`: A filepath to replace `"template"`.\n- `-pd`: A filepath to replace `"pieces"`.\n- `-s`: A filepath to replace `"summary"`.\n- `-si`: A filepath to replace `"spreadsheetsIndex"`.\n- `--strict` (flag): Fail on warnings instead of only displaying them.\n\n### `export_master`\n\nExport the master spreadsheet.\n\nRequires `"spreadsheetsIndex"` and `"template"`. Outputs data to `"summary"`.\n\nIf the spreadsheet doesn\'t match `"template"`, there is undefined behavior. For\nproper exported data, ensure that the spreadsheet has the correct format.\n\n#### Options\n\n- `-si`: A filepath to replace `"spreadsheetsIndex"`.\n- `-td`: A filepath to replace `"template"`.\n- `-s`: A filepath to replace `"summary"`.\n- `--strict` (flag): Fail on warnings instead of only displaying them.\n',
    'author': 'Joseph Lou',
    'author_email': 'jdlou@princeton.edu',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/josephlou5/roseingrave',
    'package_dir': package_dir,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.9,<4.0',
}


setup(**setup_kwargs)
