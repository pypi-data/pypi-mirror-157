import getopt
import sys
import pandas as pd
import fragments_filter as f


def contacts_correction(contacts_path):
    contacts = pd.read_csv(contacts_path, sep='\t', header=None)
    contacts.drop([0], inplace=True)
    contacts.reset_index(drop=True, inplace=True)
    contacts.columns = ['frag_a', 'frag_b', 'contacts']

    return contacts


def first_join(x, fragments_filtered, contacts):
    joined = contacts.join(fragments_filtered, on=x, how='right')
    return joined


def frag2(x):
    if x == 'frag_a':
        y = 'frag_b'
    else:
        y = 'frag_a'
    return y


def second_join(x, oligos, fragments_path, fragments_filtered, contacts):
    fragments = f.fragments_correction(fragments_path)
    fragments.pop("frag")
    fragments = fragments.merge(oligos, on=['chr', 'start'], how='left')
    contacts = first_join(x, fragments_filtered, contacts)
    y = frag2(x)
    joined = contacts.join(fragments, on=y,
                           lsuffix='_' + x[-1],
                           rsuffix='_' + y[-1], how='left')
    return joined


def concatenation(oligos_path, fragments_path, contacts_path, output_path):
    contacts = contacts_correction(contacts_path)
    fragments_filtered, oligos = f.pre_filtering(fragments_path, oligos_path)
    fragments_filtered.set_index('frag', inplace=True)
    df1 = second_join('frag_a', oligos, fragments_path, fragments_filtered, contacts)
    df2 = second_join('frag_b', oligos, fragments_path, fragments_filtered, contacts)

    df2.reindex(columns=df1.columns)
    contacts_joined = pd.concat([df1, df2])
    contacts_joined.sort_values(by=['frag_a', 'frag_b', 'start_a', 'start_b'], inplace=True)
    contacts_filtered = contacts_joined.convert_dtypes().reset_index(drop=True)

    contacts_filtered.to_csv(output_path)


# oligo_path = '/Users/loqmenanani/OneDrive/ENS/L3_ENS/Stage_L3/Projet_cbp/Pycharm/outputs/' \
#              'new_capture_oligos.csv'
# fragments_paths = '/Users/loqmenanani/OneDrive/ENS/L3_ENS/Stage_L3/Projet_cbp/Pycharm/outputs/pre_filtering.txt'
# contacts_paths = 'file:///Users/loqmenanani/OneDrive/ENS/L3_ENS/Stage_L3/' \
#                  'Projet_cbp/Pycharm/inputs/abs_fragments_contacts_weighted.txt'
#
# output_path = '/Users/loqmenanani/OneDrive/ENS/L3_ENS/Stage_L3/Projet_cbp/Pycharm/outputs/fragments_joined_a.txt'


# oligo_path = '/scratch/lanani/Stage_L3_cbp/Projet/Pycharm/outputs/new_capture_oligos.csv'
# fragments_paths = '/scratch/lanani/Stage_L3_cbp/Projet/Pycharm/inputs/fragments_list.txt'
# contacts_paths = '/scratch/lanani/Stage_L3_cbp/Projet/Pycharm/inputs/abs_fragments_contacts_weighted.txt'
# output_path = '/scratch/lanani/Stage_L3_cbp/Projet/Pycharm/outputs/contacts_filtered.txt'
#
# a = concatenation(oligo_path, fragments_paths, contacts_paths)
# a.to_csv('/scratch/lanani/Stage_L3_cbp/Projet/Pycharm/outputs/contacts_filtered.csv', sep=',')
# print('lu')
# L_start = f.starts_match(fragments_paths, oligo_path)
# for k in range(len(a)):
#     start_a = a['start_a'][k]
#     start_b = a['start_b'][k]
#     if start_a not in L_start or start_b not in L_start:
#         print('1 sur 2')
#
# print('fin')


def main(argv=None):
    if argv is None:
        argv = sys.argv[1:]
    if not argv:
        print('Please enter arguments correctly')
        exit(0)

    try:
        opts, args = getopt.getopt(argv, "ho:f:c:O:", ["--help",
                                                       "--oligos",
                                                       "--fragments",
                                                       "--contacts",
                                                       "--output"])
    except getopt.GetoptError:
        print('contacts filter arguments :\n'
              '-o <oligos_input.csv> \n'
              '-f <fragments_input.txt> (generated by hicstuff) \n'
              '-c <contacts_input.txt> (generated by hicstuff) \n'
              '-O <output_contacts_filtered.csv>')
        sys.exit(2)

    for opt, arg in opts:
        if opt in ('-h', '--help'):
            print('contacts filter arguments :\n'
                  '-o <oligos_input.csv> \n'
                  '-f <fragments_input.txt> (generated by hicstuff) \n'
                  '-c <contacts_input.txt> (generated by hicstuff) \n'
                  '-O <output_contacts_filtered.csv>\n')
            sys.exit()
        elif opt in ("-o", "--oligos"):
            oligos_input = arg
        elif opt in ("-f", "--fragments"):
            fragments_input = arg
        elif opt in ("-c", "--contacts"):
            contacts_input = arg
        elif opt in ("-O", "--output"):
            output_contacts_filtered = arg

    concatenation(oligos_input, fragments_input, contacts_input, output_contacts_filtered)


if __name__ == "__main__":
    main(sys.argv[1:])
