Metadata-Version: 2.1
Name: pyCandleMAB
Version: 1.1.7
Summary: Python package for controlling MD80-based actuators
Home-page: UNKNOWN
Author: Piotr Wasilewski
Author-email: support.md80@mabrobotics.pl
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)
Classifier: Operating System :: POSIX :: Linux
Requires-Python: >=3.6
Description-Content-Type: text/markdown

# MD80 Python driver
This Python package allows to configure and control MD80-based actuators using MAB's USB-to-CAN dongle (CANdle). The package is just a wrapper around the C++ libraries so there shouldn't be a hudge decrease in performance with simple python examples in comparison to plain C++.

The original C++ libraries, python examples and pybind configuration can be found here: https://github.com/mabrobotics/candle . Please make sure you read the "Dependencies", "USB Access", and "Latency and bandwith" before you start playing with the examples.  

# Getting started

Assuming you've already read the recommended chapters from previous section and performed the necessary setup steps now's the time to install pyCandle package:

```python3 -m pip install pyCandleMAB```


when the package is installed without errors connect CANdle device to your PC and run the first example:

```python3 ./example1.py```

when a signle actuator is connected to the dongle the console output should look simmilar to:

```[CANDLE] CANdle library version: v2.2
[CANDLE] Creating CANdle object.
[CANDLE] Reset successfull!
[CANDLE] CANdle ready.
[CANDLE] Starting pinging drives...
[CANDLE] Found drives.
[CANDLE] 1: ID = 85 (0x55)
[CANDLE] LEDs blining at ID = 85
EXIT SUCCESS
```
For more examples visit: https://github.com/mabrobotics/candle


