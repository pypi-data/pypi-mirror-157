Metadata-Version: 2.1
Name: msflta
Version: 1.0.3
Summary: This is the python package implementing several algorithms and strategy-proof mechanisms introduced in the paper Multi-stage Facility Location Problem with Transient Agents
Author-email: Xuezhen Wang <xuezhenwang2@gmail.com>
License: The MIT License (MIT)
        Copyright © 2022 <copyright holders>
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
Project-URL: Homepage, https://github.com/William-WANG2/FYP-CityU
Keywords: algorithms,strategy-proof mechanisms,facility location problem
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy (>=1.21.5)
Provides-Extra: dev
Requires-Dist: black ; extra == 'dev'
Requires-Dist: bumpver ; extra == 'dev'
Requires-Dist: isort ; extra == 'dev'
Requires-Dist: pip-tools ; extra == 'dev'
Requires-Dist: pytest ; extra == 'dev'

# Multi-stage Facility Location Problem with Transient Agent _(MSFL-TA)_

The **_msfl_ta_** is a package implementing several optimal algorithms and strategy-proof mechanisms introduced in the paper **_Multi-stage Facility Location Problem with Transient Agent_**. 

## Installation  

You can install the **_msflta_** from [PyPI](https://pypi.org/project/realpython-reader/):  

```python
python -m pip install msflta
```

The package requires a Python 3.7 and above and a Numpy 1.21.5 and above.

## Introduction

The package implements 6 different optimal algorithms and 4 different strategy-proof mechanisms as introduced in the paper.  

### Optimal Algorithms

* **sc_nfcfs** module - **sc_nfcfs(T, r, X)** function: implements the optimal algorithm for the "_No First Come First Serve Without Moving Cost Model_" in terms of _social cost_ objective
* **sc_wfcfs** module - **sc_wfcfs(T, r, X)** function: implements the optimal algorithm for the "_With First Come First Serve Without Moving Cost Model_" in terms of _social cost_ objective  
* **mc_nfcfs** module - **mc_nfcfs(T, r, X)** function: implements the optimal algorithm for the "_No First Come First Serve Without Moving Cost Model_" in terms of _maximum cost_ objective
* **mc_wfcfs** module - **mc_wfcfs(T, r, X)** function: implements the optimal algorithm for the "_With First Come First Serve Without Moving Cost Model_" in terms of _maximum cost_ objective  
* **sc_nfcfs_mov** module - **sc_nfcfs_mov(T, r, X)** function: implements the optimal algorithm for the "_No First Come First Serve With Moving Cost Model_" in terms of _social cost_ objective
* **sc_wfcfs_mov** module - **sc_wfcfs_mov(T, r, X)** function: implements the optimal algorithm for the "_With First Come First Serve With Moving Cost Model_" in terms of _social cost_ objective  

### Strategy-proof Mechanisms

* **mechanism_fc_nfcfs** module - **fc_nfcfs(T, r, X)** function: implements the strategy-proof mechanism named **Full-Coverage** for the "_Without First Come First Serve Without Moving Cost Model_"

* **mechanism_fc_wfcfs** module - **fc_wfcfs(T, r, X)** function: implements the strategy-proof mechanism named **Full-Coverage** for the "_With First Come First Serve Without Moving Cost Model_"

* **mechanism_gs_nfcfs** module - **gs_nfcfs(T, r, X)** function: implements the strategy-proof mechanism named **Full-Coverage** for the "_Without First Come First Serve With Moving Cost Model_"

* **mechanism_gs_wfcfs** module - **gs_wfcfs(T, r, X)** function: implements the strategy-proof mechanism named **Full-Coverage** for the "_With First Come First Serve With Moving Cost Model_"

## How to Use

For detailed **Input** and **Output** as well as the example of usage. Please refer to the [_Project Page_](https://github.com/William-WANG2/FYP-CityU)

