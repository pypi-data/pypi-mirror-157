# coding: utf-8

"""
    ArcGIS Earth Automation API

    This is an ArcGIS Earth Automation API help page of Swagger. You can find out more about ArcGIS Earth Automation API at https://doc.arcgis.com/en/arcgis-earth/automation-api/get-started.htm  # noqa: E501

    OpenAPI spec version: 1.12-Alpha
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import os
import sys
expr_path = os.path.abspath(
    os.path.join(os.path.dirname(__file__), '../'))

if  expr_path not in sys.path:
    sys.path.insert(0, expr_path)


import unittest
import json
import time

import swagger_client
from swagger_client.api.layer_api import LayerApi  # noqa: E501
from swagger_client.rest import ApiException


class TestLayerApiV1(unittest.TestCase):
    """LayerApi unit test stubs"""

    @classmethod
    def setUpClass(cls):
        TestLayerApiV1.layer_id = None

    def setUp(self):
        self.api = LayerApi()  # noqa: E501
        self.version = "1.0"
        self.layer = {
            "type":"MapService",
            "URI" :"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer",
            "target" :"OperationalLayers"
        }


    def tearDown(self):
        pass

    def test_3_arcgisearth_layer_id_delete(self):
        """Test case for arcgisearth_layer_id_delete

        Delete a layer by id  # noqa: E501
        """
        self.assertIsNotNone(TestLayerApiV1.layer_id)

        response_data, status_code, headers = self.api.arcgisearth_layer_id_delete(
            id=TestLayerApiV1.layer_id,
            _preload_content=False,
            async_req=False,
            api_version=self.version)

        self.assertEqual(status_code, 200)

    def test_2_arcgisearth_layer_id_get(self):
        """Test case for arcgisearth_layer_id_get

        Get layer information by id  # noqa: E501
        """
        self.assertIsNotNone(TestLayerApiV1.layer_id)

        response_data, status_code, headers = self.api.arcgisearth_layer_id_get(
            id=TestLayerApiV1.layer_id,
            _preload_content=False,
            async_req=False,
            api_version=self.version)

        self.assertEqual(status_code, 200)
        content = response_data.data.decode('utf-8')
        layer_info = json.loads(content)
        self.assertEqual("Loaded", layer_info["loadStatus"])
        self.assertEqual(TestLayerApiV1.layer_id, layer_info["id"])
        self.assertEqual(self.layer['URI'], layer_info["sourceURI"])


    def test_1_arcgisearth_layer_post(self):
        """Test case for arcgisearth_layer_post

        Add a layer  # noqa: E501
        """
        response_data, status_code, headers = self.api.arcgisearth_layer_post(
            _preload_content=False,
            async_req=False,
            body=self.layer,
            api_version=self.version)

        self.assertEqual(status_code, 200)
        content = response_data.data.decode('utf-8')
        results = json.loads(content)
        TestLayerApiV1.layer_id = results["id"]
        self.assertIsNotNone(TestLayerApiV1.layer_id)
        time.sleep(2)


if __name__ == '__main__':
    unittest.main()
