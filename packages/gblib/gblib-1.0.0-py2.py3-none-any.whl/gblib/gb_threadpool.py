

##########################################################################################################################################################################
# the import lib block
##########################################################################################################################################################################
import threadpool
from threading import Thread


##########################################################################################################################################################################
# the Constant block
##########################################################################################################################################################################


##########################################################################################################################################################################
# the function block
##########################################################################################################################################################################
def thread_pool(size, function, var_list):
	"""
	creat and run a thread_pool
	:param size: the max size of the pool is 10. because of the urlib3 limitation
	:param function:
	:param var_list:
	:return:
	"""
	pool = threadpool.ThreadPool(size)
	requests = threadpool.makeRequests(function, var_list)
	for req in requests:
		pool.putRequest(req)
	pool.wait()
