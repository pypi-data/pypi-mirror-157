from java.lang import Object

class PyObject(Object):
    def __init__(self, *args) -> None: ...
    def __abs__(self) -> None: ...
    def __add__(self, other) -> None: ...
    def __and__(self, other) -> None: ...
    def __call__(self, *args, **kwargs) -> None: ...
    def __cmp__(self, other) -> None: ...
    def __coerce__(self, pyo) -> None: ...
    def __coerce_ex__(self, o) -> None: ...
    def __complex__(self) -> None: ...
    def __contains__(self, o) -> None: ...
    def __delete__(self, obj) -> None: ...
    def __delitem__(self, key) -> None: ...
    def __delslice__(self, *args) -> None: ...
    def __dir__(self) -> None: ...
    def __div__(self, other) -> None: ...
    def __ensure_finalizer__(self) -> None: ...
    def __findattr__(self, name) -> None: ...
    def __findattr_ex__(self, name) -> None: ...
    def __finditem__(self, key) -> None: ...
    def __float__(self) -> None: ...
    def __floordiv__(self, other) -> None: ...
    def __ge__(self, other): ...
    def __get__(self, obj, type) -> None: ...
    def __getattr__(self, name) -> None: ...
    def __getitem__(self, key) -> None: ...
    def __getnewargs__(self) -> None: ...
    def __getslice__(self, *args) -> None: ...
    def __gt__(self, other): ...
    def __hex__(self) -> None: ...
    def __iadd__(self, other) -> None: ...
    def __iand__(self, other) -> None: ...
    def __idiv__(self, other) -> None: ...
    def __idivmod__(self, other) -> None: ...
    def __ifloordiv__(self, other) -> None: ...
    def __ilshift__(self, other) -> None: ...
    def __imod__(self, other) -> None: ...
    def __imul__(self, other) -> None: ...
    def __index__(self) -> None: ...
    def __int__(self) -> None: ...
    def __invert__(self) -> None: ...
    def __ior__(self, other) -> None: ...
    def __ipow__(self, other) -> None: ...
    def __irshift__(self, other) -> None: ...
    def __isub__(self, other) -> None: ...
    def __iter__(self): ...
    def __iternext__(self) -> None: ...
    def __itruediv__(self, other) -> None: ...
    def __ixor__(self, other) -> None: ...
    def __le__(self, other): ...
    def __long__(self) -> None: ...
    def __lshift__(self, other) -> None: ...
    def __lt__(self, other): ...
    def __mod__(self, other) -> None: ...
    def __mul__(self, other) -> None: ...
    def __neg__(self) -> None: ...
    def __nonzero__(self) -> None: ...
    def __not__(self) -> None: ...
    def __oct__(self) -> None: ...
    def __or__(self, other) -> None: ...
    def __pos__(self) -> None: ...
    def __pow__(self, other) -> None: ...
    def __radd__(self, other) -> None: ...
    def __rand__(self, other) -> None: ...
    def __rdiv__(self, other) -> None: ...
    def __rdivmod__(self, other) -> None: ...
    def __rfloordiv__(self, other) -> None: ...
    def __rlshift__(self, other) -> None: ...
    def __rmod__(self, other) -> None: ...
    def __rmul__(self, other) -> None: ...
    def __ror__(self, other) -> None: ...
    def __rpow__(self, other) -> None: ...
    def __rrshift__(self, other) -> None: ...
    def __rshift__(self, other) -> None: ...
    def __rsub__(self, other) -> None: ...
    def __rtruediv__(self, other) -> None: ...
    def __rxor__(self, other) -> None: ...
    def __set__(self, obj, value) -> None: ...
    def __setitem__(self, key, value) -> None: ...
    def __setslice__(self, start, stop, value) -> None: ...
    def __sub__(self, other) -> None: ...
    def __tojava__(self, c) -> None: ...
    def __truediv__(self, other) -> None: ...
    def __trunc__(self) -> None: ...
    def __unicode__(self) -> None: ...
    def __xor__(self, other) -> None: ...
    def asDouble(self) -> None: ...
    def asIndex(self, *args) -> None: ...
    def asInt(self, *args) -> None: ...
    def asIterable(self) -> None: ...
    def asLong(self, *args) -> None: ...
    def asName(self, arg) -> None: ...
    def asString(self, *args) -> None: ...
    def asStringOrNull(self, *args) -> None: ...
    def bit_length(self) -> None: ...
    def conjugate(self) -> None: ...
    def delDict(self) -> None: ...
    def delType(self) -> None: ...
    def dispatch__init__(self, *args, **kwargs) -> None: ...
    def fastGetClass(self) -> None: ...
    def fastGetDict(self) -> None: ...
    def finalize(self) -> None: ...
    def getDict(self) -> None: ...
    def getType(self) -> None: ...
    def impAttr(self) -> None: ...
    def implementsDescrDelete(self) -> None: ...
    def implementsDescrGet(self) -> None: ...
    def implementsDescrSet(self) -> None: ...
    def invoke(self, *args, **kwargs) -> None: ...
    def isCallable(self) -> None: ...
    def isDataDescr(self) -> None: ...
    def isIndex(self) -> None: ...
    def isInteger(self) -> None: ...
    def isMappingType(self) -> None: ...
    def isNumberType(self) -> None: ...
    def isSequenceType(self) -> None: ...
    def mergeClassDict(self, accum, aClass) -> None: ...
    def mergeDictAttr(self, accum, attr) -> None: ...
    def mergeListAttr(self, accum, attr) -> None: ...
    def noAttributeError(self, name) -> None: ...
    def object___subclasshook__(self, type, subclass) -> None: ...
    def readonlyAttributeError(self, name) -> None: ...
    def runsupportedopMessage(self, op, o2) -> None: ...
    def setDict(self, newDict) -> None: ...
    def setType(self, type) -> None: ...

class PyType(PyObject):
    @staticmethod
    def addBuilder(c, builder) -> None: ...
    def addMethod(self, meth) -> None: ...
    def compatibleForAssignment(self, other, attribute) -> None: ...
    def delBases(self) -> None: ...
    def delModule(self) -> None: ...
    @staticmethod
    def ensureBootstrapped() -> None: ...
    @staticmethod
    def ensureDoc() -> None: ...
    @staticmethod
    def ensureModule() -> None: ...
    def fastGetName(self) -> None: ...
    def fromClass(self, c, hardRef: bool = ...) -> None: ...
    def getAbstractMethods(self) -> None: ...
    def getBase(self) -> None: ...
    def getBases(self) -> None: ...
    def getDoc(self) -> None: ...
    def getFlags(self) -> None: ...
    def getModule(self) -> None: ...
    def getMro(self) -> None: ...
    def getName(self) -> None: ...
    def getNumSlots(self) -> None: ...
    def getProxyType(self) -> None: ...
    def getStatic(self) -> None: ...
    def instDict(self) -> None: ...
    def isSubType(self, supertype) -> None: ...
    def lookup_where(self, name, where) -> None: ...
    def lookup(self, name) -> None: ...
    def needsFinalizer(self) -> None: ...
    def newType(self, new_, metatype, name, bases, dict) -> None: ...
    def pyDelName(self) -> None: ...
    def pyGetName(self) -> None: ...
    def pySetName(self, name) -> None: ...
    def refersDirectlyTo(self, ob) -> None: ...
    def removeMethod(self, meth) -> None: ...
    def setAbstractMethods(self, value) -> None: ...
    def setBases(self, newBasesTuple) -> None: ...
    def setName(self, name) -> None: ...
    def super_lookup(self, ref, name) -> None: ...
    def traverse(self, visit, arg) -> None: ...
    def type___eq__(self, other) -> None: ...
    def type___ge__(self, other) -> None: ...
    def type___gt__(self, other) -> None: ...
    def type___instancecheck__(self, inst) -> None: ...
    def type___le__(self, other) -> None: ...
    def type___lt__(self, other) -> None: ...
    def type___ne__(self, other) -> None: ...
    def type___subclasscheck__(self, inst) -> None: ...
    def type___subclasses__(self) -> None: ...
