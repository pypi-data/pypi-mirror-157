.\" Generated by scdoc 1.11.1
.\" Complete documentation for this program is not available as a GNU info page
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.nh
.ad l
.\" Begin generated content:
.TH "hkxargs" "1" "2022-07-03"
.P
.SH NAME
.P
hkxargs - run commands on \fBsxhkd\fR(1) keybinds
.P
.SH SYNOPSYS
.P
hkxargs [options.\&.\&.\&] [\fIcommand\fR]
.P
.SH DESCRIPTION
.P
\fBhkxargs\fR parses each line of standard input as a hotkey (which must not
have embedded sequences of the form \fB{s1,s2,.\&.\&.\&,sn}\fR) and then executes
\fIcommand\fR on each keybind permutation referred to by a hotkey.\&
.P
Similarly to \fBxargs\fR(1), \fIcommand\fR can have replacement strings for
the hotkey (see \fB-H\fR option) and for the filename of a temporary file
containing the contents of the command (excluding any ";" prefix;
see \fB-C\fR option).\&  \fIcommand\fR may contain any number of each type of
replacement string.\&  However, if no replacement strings are contained
in \fIcommand\fR, then \fBhkxargs\fR will interpret \fIcommand\fR as if it had the
command replacement string appended to it as a final argument.\&
.P
Based on the mode specified by the \fB--mode\fR option, \fBhkxargs\fR uses the
standard output of each invocation of \fIcommand\fR.\&
.P
See \fBsxhkd-parser\fR(7) for important background information needed to
use this tool.\&
.P
.SH OPTIONS
.P
Run \fBhkxargs --help\fR.\&
.P
.SH MODE
.P
\fBhkxargs\fR has modes which determine how the output of \fIcommand\fR will
be interpreted.\&
.P
.SS edit
.P
The \fBedit\fR mode works similarly to \fBxargs\fR(1).\&  The standard output of
each invocation of \fIcommand\fR is interpreted to be the new body of the
keybind permutation referred to by the hotkey.\&
.P
If \fB--exec\fR is used, the new command body is executed using \fBSHELL
-c\fR \fInew_command_body\fR.\&  If the original command specified it was
synchronous (by prefixing ";"), then \fBhkxargs\fR waits for the command
to exit before executing further commands.\&  A delay between each such
invocation can be specified by the \fB--delay\fR option.\&  \fB--exec\fR can only
be used with this mode.\&
.P
Finally, the keybind permutation is printed according to \fBsxhkdrc\fR
syntax, with any embedded braces in the command escaped:
.P
\fBHOTKEY\fR
.RS 4
\fBNEW_COMMAND\fR
.P
.RE
.SS filter
.P
The \fBfilter\fR mode works similarly to the \fBedit\fR mode, with the difference
being that the final output is only the command without any whitespace
to prefix it:
.P
\fBCOMMAND\fR
.P
.SS linter
.P
The \fBlinter\fR mode interprets each line of the output of the command to be
a compiler-style error message.\&  The format of the error message can be
configured by the \fB-f\fR option, which contains a mix of literal text and
format fields of the form \fB%{FIELDNAME}\fR.\&  The valid fields are \fBfile\fR,
\fBline\fR, \fBcolumn\fR, \fBtype\fR, \fBmessage\fR.\&
.P
\fBhkxargs\fR itself outputs a compiler-style error message:
.P
If \fBtype\fR is in the format spec: "\fBSXHKDRC_FILENAME\fR:\fBCOMMAND_LINENO\fR:
\fBEXTRACTED_TYPE\fR: \fBEXTRACTED_MESSAGE\fR"
.br
Otherwise: "\fBSXHKDRC_FILENAME\fR:\fBCOMMAND_LINENO\fR:\fBEXTRACTED_MESSAGE\fR"
.P
.SH EXIT STATUS
.P
The exit status of \fBhkxargs\fR distinguishes between errors during
the execution of \fIcommand\fR (which happens first and always happens;
"intrinsic invocation") and errors during commands run due to \fB--exec\fR
("non-intrinsic invocation").\&
.P
The exit status for errors during intrinsic invocation are taken straight
from GNU \fBxargs\fR(1) v4.\&8.\&0.\&  During non-intrinsic invocation, there is
the same set of error types, which \fBhkxargs\fR reports by subtracting 64
from the corresponding exit code for intrinsic invocation errors \fB(EXCEPTION:
exit status 1 becomes 2)\fR.\&
.P
\fBhkxargs\fR exits immediately upon encountering exit status 255 or ENOENT
during intrinsic invocation.\&
.P
.SH ENVIRONMENT
.P
\fBSXHKD_SHELL\fR, \fBSHELL\fR
.RS 4
Just like \fBsxhkd\fR(1), \fBSHELL\fR will be the content of the first
defined environment variable in the following list: \fBSXHKD_SHELL\fR,
\fBSHELL\fR.\&
.P
.RE
.SH EXAMPLES
.P
.SS Running shellcheck(1) on the commands of every keybind permutation
.P
.nf
.RS 4
$ hkfind | hkxargs -m linter shellcheck -s sh -f gcc --color=always | uniq
.fi
.RE
.P
.SH SEE ALSO
.P
\fBsxhkd\fR(1), \fBxargs\fR(1), \fBhkfind\fR(1), \fBshellcheck\fR(1), \fBsxhkd-parser\fR(7)
