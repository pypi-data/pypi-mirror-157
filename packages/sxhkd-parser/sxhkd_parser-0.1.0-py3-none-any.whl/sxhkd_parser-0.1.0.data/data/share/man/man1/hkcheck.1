.\" Generated by scdoc 1.11.1
.\" Complete documentation for this program is not available as a GNU info page
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.nh
.ad l
.\" Begin generated content:
.TH "hkcheck" "1" "2022-07-03"
.P
.SH NAME
.P
hkcheck - check config file of \fBsxhkd\fR(1) for user errors, violations of limitations in \fBsxhkd\fR(1), and undefined behaviour
.P
.SH SYNOPSIS
.P
hkcheck [options.\&.\&.\&]
.P
.SH DESCRIPTION
.P
\fBhkcheck\fR is a linter tool for \fBsxhkd\fR(1) which warns when it sees parts
of the config that contain user errors, violations of limitations in
\fBsxhkd\fR(1), and undefined behaviour.\&  The warnings are formatted like
compiler error messages and contain the line (and possibly column)
in the config file where the error occurs.\&
.P
See \fBsxhkd-parser\fR(7) for important background information needed to
use this tool.\&
.P
.SH OPTIONS
.P
Run \fBhkcheck --help\fR.\&
.P
.SH CHECKS
.P
.SS User Errors
.P
\fBUse of potentially invalid keysyms\fR
.RS 4
Any keysyms that are not in the set of keysyms defined by the
headers for X11 or for XFree86 vendor specific keysyms are
unlikely to be real keysyms.\&  However, the actual system being
used is the ultimate authority on this, hence only "\fIpotentially\fR
invalid".\&
.P
.RE
\fBSingle-argument sequences\fR
.RS 4
Since sequences use braces as delimiters, it is easy to forget
to escape them when using \fBawk\fR(1) in a command (for example).\&
This results in a sequence with only one element and a command
with the braces removed.\&  This is almost certainly not the
intended result.\&
.P
.RE
.SS Limitations
.P
\fBCharacter limit in hotkeys and commands\fR
.RS 4
Version 0.\&5.\&1 - <current version (0.\&6.\&2)> (inclusive) of
\fBsxhkd\fR(1) limits hotkeys and commands to 512 bytes.\&
.P
.RE
.SS Undefined Behaviour
.P
\fBEmpty sequence elements without using _\fR
.RS 4
The manpage for \fBsxhkd\fR(1) states that \fB_\fR is an empty sequence
element but doesn't indicate that it's just "syntactic sugar"
or say anything about what happens with an actual empty string
as a sequence element:
.P
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
\fB{a,b,_}\fR is well-defined
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
\fB{a,b,}\fR is undefined

.RE
.P
.RE
\fBDuplicate hotkeys and hotkey conflicts\fR
.RS 4
The manpage for \fBsxhkd\fR(1) is silent about what happens when
there are duplicate hotkeys--whether the first or last one
wins--or when hotkeys conflict.\&
.P
Here are some example conflicts:
.P
.RS 4
.ie n \{\
\h'-04'1.\h'+03'\c
.\}
.el \{\
.IP 1. 4
.\}
\fBsuper + a\fR
.RE
.RS 4
.ie n \{\
\h'-04'2.\h'+03'\c
.\}
.el \{\
.IP 2. 4
.\}
\fBsuper + a; b\fR
.RE
.RS 4
.ie n \{\
\h'-04'3.\h'+03'\c
.\}
.el \{\
.IP 3. 4
.\}
\fBsuper + a: {c,d}\fR

.RE
.P
(1) conflicts with both (2) and (3) because, once the chord
\fBsuper + a\fR has been entered, sxhkd has two choices:
.P
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
execute the command for (1); or
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
continue to (2) or (3).\&

.RE
.P
(2) and (3) conflict with each other because, once the chord
\fBsuper + a\fR has been entered, sxhkd has two choices:
.P
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
wait for more input until \fBb\fR is received and then execute the
command for (2); or
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
enter the mode associated with \fBsuper + a\fR and execute the associated
commands every time when \fBc\fR or \fBd\fR is pressed while the mode is active.\&

.RE
.P
.RE
.SH SEE ALSO
.P
\fBsxhkd\fR(1), \fBsxhkd-parser\fR(7)
