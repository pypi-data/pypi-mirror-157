.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "FABSYS_BACKUP-INJECT 1"
.TH FABSYS_BACKUP-INJECT 1 "2022-06-13" "FABS" "FABS Command Reference"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
fabsys_backup\-inject \- Inject a volume dump blob into FABS
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBfabsys backup-inject\fR [\fB\-\-note\fR <\fInote\fR>] <\fIvolume\fR> <\fIblob_filepath\fR>
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBfabsys backup-inject\fR command can be used to inject a volume dump blob
into the \s-1FABS\s0 backup system.
.PP
Normally when a backup is run by fabs (for example, by scheduling with
\&\f(CW\*(C`fabsys_backup\-start(1)\*(C'\fR), fabs generates a volume dump blob by dumping the
volume, and then processes that dump blob and stores it in fabs' database.
But if you already have a dump blob that is generated by some other process,
you may want fabs to re-use that dump blob instead of generating a new
(identical) dump blob again, to avoid hitting the \s-1AFS\s0 volserver unnecessarily
again. The \fBfabsys backup-inject\fR command can be used to re-use such dump
blobs. Just provide the volume name and full path to a file containing a dump
blob for that volume.
.PP
Running this command effectively schedules a backup run, but a backup run that
only backs up the given volume, and only uses the given dump blob instead of
dumping the volume from an \s-1AFS\s0 volserver. When this command completes, that
backup is just scheduled, and has probably not completed yet. You can examine
progress for it just like a normal backup run, by monitoring
\&\f(CW\*(C`fabsys_backup\-status(1)\*(C'\fR.
.PP
While processing the given dump blob, fabs compares the metadata in the dump
blob to the metadata reported by the actual volume it is for. If it looks like
the provided dump blob is out of date, fabs will ignore the dump blob and not
process it. This is because fabs records other volume-related metadata in the
backup database that is not recorded in the dump blob, and so an outdated dump
blob may not be consistent with the other information recorded by fabs.
However, this is just a reasonable effort to avoid consistency issues; other
unavoidable issues are noted in the \s-1CONSISTENCY WARNING\s0 section below.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-note\fR <\fInote\fR>" 4
.IX Item "--note <note>"
This is the same as the \fB\-\-note\fR option to \f(CW\*(C`fabsys_backup\-start(1)\*(C'\fR. See
\&\f(CW\*(C`fabsys_backup\-start(1)\*(C'\fR for more information.
.SH "CONSISTENCY WARNING"
.IX Header "CONSISTENCY WARNING"
fabs cannot verify whether or not the dump given to \fBfabsys backup-inject\fR is
correct, since fabs did not generate the dump. That is, while fabs can do
some sanity checks against the metadata in the provided blob, there is no way
to verify, for example, that the actual data in the blob is valid.
.PP
So, when using this command, you must trust that the dump blob you are giving
to fabs is correct. If fabs is given incorrect data, the path translation
functionality in fabs could be wrong, and fabs could possibly restore
incorrect data.
.SH "PRIVILEGED REQUIRED"
.IX Header "PRIVILEGED REQUIRED"
The issuer of this command must be able to read the \s-1FABS\s0 configuration
(specifically, the database access information), typically in
\&\fB/etc/fabs/fabs.yaml.d/\fR.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2015, Sine Nomine Associates.
.PP
See the provided \s-1LICENSE\s0 file for licensing terms.
