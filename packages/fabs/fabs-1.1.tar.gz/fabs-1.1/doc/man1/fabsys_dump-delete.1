.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "FABSYS_DUMP-DELETE 1"
.TH FABSYS_DUMP-DELETE 1 "2022-06-13" "FABS" "FABS Command Reference"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
fabsys_dump\-delete \- Delete FABS volume dumps
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBfabsys dump-delete\fR (<\fIid\fR> [<\fIid\fR> ...] | [\fB\-\-brid\fR <\fIbrid\fR>]
    [\fB\-\-volid\fR <\fIvolid\fR> | \fB\-\-volume\fR <\fIvolume\fR>]
    [\fB\-\-before <\f(BItime\fB\fR] [\fB\-\-after <\f(BItime\fB\fR]
    [\fB\-\-redundant\fR[=<\fIredundancy\fR>]]
    [\fB\-n\fR <\fIn_dumps\fR>] )
    [\fB\-\-keep\-blob\fR]
    [\fB\-\-verbose\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBfabsys dump-delete\fR deletes volume dumps from \s-1FABS.\s0 Many options to this
command are the same as in \f(CW\*(C`fabsys_dump\-list(1)\*(C'\fR; see \f(CW\*(C`fabsys_dump\-list(1)\*(C'\fR
for more info.
.PP
For all matching volume dumps, \fBfabsys dump-delete\fR will delete the volume
dump from the \s-1FABS\s0 database, as well as the corresponding volume dump blob on
disk if it exists (unless \fB\-\-keep\-blob\fR is given). If the deleted volume dump
was the last volume dump for a backup run, that backup run is also deleted.
.PP
As volume dumps and backup runs are deleted from the database, information on
what was deleted is printed to stdout (or recorded in a \s-1JSON\s0 object, if
\&\fB\-\-format json\fR was given). To see what would be deleted before actually
deleting the dumps, give the same search criteria to \f(CW\*(C`fabsys_dump\-list(1)\*(C'\fR.
You can then run \fBfabsys_dump\-delete\fR with the same search criteria, or just
call \fBfabsys_dump\-delete\fR with the volume IDs shown by \f(CW\*(C`fabsys_dump\-list(1)\*(C'\fR.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "<\fIid\fR> [<\fIid\fR> ...]" 4
.IX Item "<id> [<id> ...]"
Delete the given volume dump IDs.
.IP "\fB\-\-brid\fR <\fIbrid\fR>" 4
.IX Item "--brid <brid>"
.PD 0
.IP "\fB\-\-volid\fR <\fIvolid\fR> | \fB\-\-volume\fR <\fIvolume\fR>" 4
.IX Item "--volid <volid> | --volume <volume>"
.IP "\fB\-\-before\fR <\fItime\fR>" 4
.IX Item "--before <time>"
.IP "\fB\-\-after\fR <\fItime\fR>" 4
.IX Item "--after <time>"
.IP "\fB\-\-redundant\fR[=<\fIredundancy\fR>]" 4
.IX Item "--redundant[=<redundancy>]"
.IP "\fB\-n\fR <\fIn_dumps\fR>" 4
.IX Item "-n <n_dumps>"
.PD
These options are the same as in \f(CW\*(C`fabsys_dump\-list(1)\*(C'\fR, except the matching
volume dumps are deleted instead of just shown.
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
Print some extra information on stderr, such as our search criteria.
.IP "\fB\-\-keep\-blob\fR" 4
.IX Item "--keep-blob"
Just delete the matching volume dump records from the \s-1FABS\s0 database. Do not
delete the corresponding dump blob file from disk.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 11
\&    $ fabsys dump\-delete \-\-volume vol.1 \-\-before 2022\-02\-18 \-\-redundant
\&    Deleting Volume dump id 2003, volume: 536871063 (vol.1)
\&      cloned at:    Mon Feb 14 18:47:30 2022
\&      last updated: Mon Feb 14 18:46:57 2022
\&      dump blob: /var/lib/fabs/fabs\-dumps/cell\-example.com/20/00/00/536871063/536871063.8001.dump
\&    Deleting Backup run 5 [DONE]: Manually\-issued backup run from command line
\&      status.2918: Done
\&      cell: example.com, volume: None, errors: 0
\&      start: Mon Feb 14 18:47:19 2022 EST
\&      end:   Mon Feb 14 18:51:13 2022 EST
\&    Successfully deleted 1 dump
\&
\&    $ fabsys dump\-delete \-\-volume vol.1 \-\-before 2022\-02\-18 \-\-redundant \-\-format json | jq
\&    {
\&      "fabs_dump_delete": [
\&        {
\&          "dump": {
\&            "id": 2003,
\&            "vl_id": 8001,
\&            "hdr_size": 31,
\&            "hdr_creation": 1644882450,
\&            "hdr_copy": 1630435695,
\&            "hdr_backup": 1644882450,
\&            "hdr_update": 1644882417,
\&            "incr_timestamp": 0,
\&            "dump_size": 32586,
\&            "dump_storid": 1,
\&            "dump_spath": "cell\-example.com/20/00/00/536871063/536871063.8001.dump",
\&            "dump_checksum": "md5:ebb0dfbd0badc6721a7f1c8b557fc06c",
\&            "name": "vol.1",
\&            "rwid": 536871063,
\&            "roid": null,
\&            "bkid": 536871065,
\&            "cell": "example.com",
\&            "br_id": 5,
\&            "dump_blob": {
\&              "bstore": {
\&                "uuid": "a6888379\-dfe9\-4b72\-a95a\-eb13bb6b7c18",
\&                "storid": 1,
\&                "prefix": "/var/lib/fabs/fabs\-dumps"
\&              },
\&              "rel_path": "cell\-example.com/20/00/00/536871063/536871063.8001.dump",
\&              "abs_path": "/var/lib/fabs/fabs\-dumps/cell\-example.com/20/00/00/536871063/536871063.8001.dump"
\&            }
\&          }
\&        },
\&        {
\&          "backup_run": {
\&            "cell": "example.com",
\&            "dv": 2918,
\&            "end": 1644882673,
\&            "errors": 0,
\&            "id": 5,
\&            "injected_blob_checksum": null,
\&            "injected_blob_spath": null,
\&            "injected_blob_storid": null,
\&            "note": "Manually\-issued backup run from command line",
\&            "start": 1644882439,
\&            "state": "DONE",
\&            "state_descr": "Done",
\&            "state_last": null,
\&            "state_source": "fabs\-1 pid:31564",
\&            "volume": null
\&          }
\&        }
\&      ]
\&    }
.Ve
.SH "PRIVILEGED REQUIRED"
.IX Header "PRIVILEGED REQUIRED"
The issuer of this command must be able to read the \s-1FABS\s0 configuration
(specifically, the database access information), typically in
\&\fB/etc/fabs/fabs.yaml.d/\fR.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2022, Sine Nomine Associates.
.PP
See the provided \s-1LICENSE\s0 file for licensing terms.
