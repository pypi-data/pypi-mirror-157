.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "FABSYS_STORAGE-TRIM 1"
.TH FABSYS_STORAGE-TRIM 1 "2022-06-13" "FABS" "FABS Command Reference"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
fabsys_storage\-trim \- Find trimmable dumps in FABS storage
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBfabsys storage-trim\fR [\fB\-0\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBfabsys storage-trim\fR command is used to list volume dump blobs in the
fabs storage backend that are eligible for trimming. A blob is considered
eligible for trimming if there are other, newer, volume dump blobs for the
same volume. That is, this command lists redundant volume dump blobs that are
not needed to restore the most recent copy of data for a volume.
.PP
The general idea is that you run this command periodically to reduce the amount
of disk space that the fabs backend disk storage uses. You can run this
command to get a list of trimmable file names, and for each file name, you can
check if that file has been backed up to tape or some other long term storage.
If it has, you can safely delete the file, and fabs will later request that
the file be restored from tape (via the \fBbackend/request_cmd\fR config
directive) if it is required to fulfill a restore request.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-0\fR" 4
.IX Item "-0"
By default, \fBfabsys storage-trim\fR prints out trimmable filenames separated by
newlines. By giving the \fB\-0\fR option, filenames are separated by a \s-1NUL\s0
character, instead.
.Sp
This option is only used for \fB\-\-format txt\fR. For \fB\-\-format json\fR, each
trimmable dump results in an object with information about that dump.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 3
\&    $ fabsys storage\-trim
\&    /var/lib/fabs/fabs\-dumps/cell\-example.com/20/00/00/536871063/536871063.2001.dump
\&    /var/lib/fabs/fabs\-dumps/cell\-example.com/20/00/00/536871063/536871063.8001.dump
\&
\&    $ fabsys storage\-trim \-\-format json
\&    {
\&      "fabs_storage_trim": [
\&        {
\&          "path": "/var/lib/fabs/fabs\-dumps/cell\-example.com/20/00/00/536871063/536871063.1.dump",
\&          "dump": {
\&            "id": 2001,
\&            "vl_id": 2001,
\&            "hdr_size": 31,
\&            "hdr_creation": 1643664307,
\&            "hdr_copy": 1630435695,
\&            "hdr_backup": 1643664307,
\&            "hdr_update": 1643664276,
\&            "incr_timestamp": 0,
\&            "dump_size": 32586,
\&            "dump_storid": 1,
\&            "dump_spath": "cell\-example.com/20/00/00/536871063/536871063.2001.dump",
\&            "dump_checksum": "md5:e6bfbf431cc3d243d6b80d4454aba454",
\&            "name": "vol.1",
\&            "rwid": 536871063,
\&            "roid": None,
\&            "bkid": 536871065,
\&            "cell": "example.com",
\&            "br_id": 2,
\&            "dump_blob": {
\&              "bstore": {
\&                "uuid": "a6888379\-dfe9\-4b72\-a95a\-eb13bb6b7c18",
\&                "storid": 1,
\&                "prefix": "/var/lib/fabs/fabs\-dumps"
\&              },
\&              "rel_path": "cell\-example.com/20/00/00/536871063/536871063.2001.dump",
\&              "abs_path": "/var/lib/fabs/fabs\-dumps/cell\-example.com/20/00/00/536871063/536871063.2001.dump"
\&            }
\&          }
\&        },
\&        {
\&          "path": "/var/lib/fabs/fabs\-dumps/cell\-example.com/20/00/00/536871063/536871063.1.dump",
\&          "dump": {
\&            "id": 2003,
\&            "vl_id": 8001,
\&            "hdr_size": 31,
\&            "hdr_creation": 1644882450,
\&            "hdr_copy": 1630435695,
\&            "hdr_backup": 1644882450,
\&            "hdr_update": 1644882417,
\&            "incr_timestamp": 0,
\&            "dump_size": 32586,
\&            "dump_storid": 1,
\&            "dump_spath": "cell\-example.com/20/00/00/536871063/536871063.8001.dump",
\&            "dump_checksum": "md5:ebb0dfbd0badc6721a7f1c8b557fc06c",
\&            "name": "vol.1",
\&            "rwid": 536871063,
\&            "roid": None,
\&            "bkid": 536871065,
\&            "cell": "example.com",
\&            "br_id": 5,
\&            "dump_blob": {
\&              "bstore": {
\&                "uuid": "a6888379\-dfe9\-4b72\-a95a\-eb13bb6b7c18",
\&                "storid": 1,
\&                "prefix": "/var/lib/fabs/fabs\-dumps"
\&              },
\&              "rel_path": "cell\-example.com/20/00/00/536871063/536871063.8001.dump",
\&              "abs_path": "/var/lib/fabs/fabs\-dumps/cell\-example.com/20/00/00/536871063/536871063.8001.dump"
\&            }
\&          },
\&        }
\&      ]
\&    }
.Ve
.SH "PRIVILEGED REQUIRED"
.IX Header "PRIVILEGED REQUIRED"
The issuer of this command must be able to read the \s-1FABS\s0 configuration
(specifically, the database access information), typically in
\&\fB/etc/fabs/fabs.yaml.d/\fR.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2015, Sine Nomine Associates.
.PP
See the provided \s-1LICENSE\s0 file for licensing terms.
