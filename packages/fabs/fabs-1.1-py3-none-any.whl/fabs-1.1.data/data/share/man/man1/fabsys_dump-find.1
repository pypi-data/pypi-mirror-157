.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "FABSYS_DUMP-FIND 1"
.TH FABSYS_DUMP-FIND 1 "2022-06-13" "FABS" "FABS Command Reference"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
fabsys_dump\-find \- Find dumps in the FABS backup database
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBfabsys dump-find\fR [\fB\-\-path\fR <\fIpath\fR>] [\fB\-\-volume\fR <\fIvolume\fR>]
    [\fB\-\-near\fR <\fItimestamp\fR>] [\fB\-n\fR <\fIn_dumps\fR>] [\fB\-\-admin\fR]
    [\fB\-\-user\fR <\fIuser\fR>]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBfabsys dump-find\fR command searches for dumps of volumes that have been
backed up by \s-1FABS.\s0
.PP
This command is intended to be used to find dumps to restore from. See
\&\f(CW\*(C`fabsys dump\-list\*(C'\fR for a similar command to examine volume dumps for
maintenance purposes.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-path\fR <\fIpath\fR>" 4
.IX Item "--path <path>"
Find dumps that are associated with data in the specified path name. The path
refers to a path in /afs, for example: /afs/cell/foo/bar/baz. \s-1FABS\s0 will use
data in its backup database to translate the path to a volume, and find volume
dumps for that volume.
.Sp
Note that all of the path components must be backed up in \s-1FABS\s0 in order for
this to work properly. For example, say you have a volume \*(L"app.foo\*(R" mounted at
/afs/cell/app/foo, and a volume \*(L"app.root\*(R" mounted at /afs/cell/app. If
\&\*(L"app.foo\*(R" is backed up, but \*(L"app.root\*(R" is \fBnot\fR, then specifying
\&\fB\-\-path /afs/cell/app/foo\fR will not be able to find the \*(L"app.foo\*(R" volume,
since \s-1FABS\s0 doesn't have the mountpoint data inside /afs/cell/app.
.Sp
In other words, if a volume is backed up, the \*(L"parent\*(R" volumes for that volume
should also be backed up. Otherwise, such volumes will not be findable via
\&\fB\-\-path\fR (but can still be found via other means, such as \fB\-\-volume\fR).
.IP "\fB\-\-volume\fR <\fIvolume\fR>" 4
.IX Item "--volume <volume>"
Find dumps for data in the specified volume. Instead of finding data by path,
this instead just searches for data for the specific volume, and prints the
associated dumps.
.IP "\fB\-\-near\fR <\fItimestamp\fR>" 4
.IX Item "--near <timestamp>"
If this flag is passed, this command will try to find backups from around the
time of the given timestamp. By default without this flag, this command will
just find the most recent dumps instead.
.Sp
The given time can be given as a unix timestamp with a leading \*(L"@\*(R" (e.g.
\&\*(L"\-\-near \f(CW@1644102842\fR\*(R"), or as an \s-1ISO\-8601\s0 string, or any format understood by
the Python module dateutil.parser (e.g. \*(L"2022\-02\-05 23:14:02 \s-1UTC\*(R"\s0).
.Sp
For backwards compatibility, the timestamp can also be given as a raw unix
timestamp (e.g. \*(L"\-\-near 1644102842\*(R"). However, this can be ambiguous with other
time specifications, so it is recommended to use the \*(L"@\*(R" form.
.IP "\fB\-n\fR <\fIn_dumps\fR>" 4
.IX Item "-n <n_dumps>"
This changes the number of dumps that this command will print out. By default,
it prints information about a maximum of 3 dumps.
.IP "\fB\-\-admin\fR" 4
.IX Item "--admin"
This flag indicates that the request is being performed by an administrator,
and so authorization checks are bypassed.
.IP "\fB\-\-user\fR \fIuser\fR" 4
.IX Item "--user user"
This flag indicates the restore request is being done for a user. Authorization
checks are performed to ensure that the user is permitted to restore the
requested volume.
.SH "PRIVILEGED REQUIRED"
.IX Header "PRIVILEGED REQUIRED"
The issuer of this command must be able to read the \s-1FABS\s0 configuration
(specifically, the database access information), typically in
\&\fB/etc/fabs/fabs.yaml.d/\fR.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2015, Sine Nomine Associates.
.PP
See the provided \s-1LICENSE\s0 file for licensing terms.
