.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "FABSYS 1"
.TH FABSYS 1 "2022-06-13" "FABS" "FABS Command Reference"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
fabsys \- Command suite for the FABS backup system
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBfabsys\fR [\fB\-\-config=\fR\fIfile\fR] [\fB\-x\fR \fIkey\fR=\fIval\fR] [\fB\-\-format\fR \fIformat\fR]
    <\fIcommand\fR> <\fIarguments\fR>
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBfabsys\fR is the frontend command suite for the Flexible \s-1AFS\s0 Backup System
(\s-1FABS\s0), used for backing up \s-1AFS\s0 data via volume blobs to disk. This page just
provides general documentation common to all \fBfabsys\fR commands. For
documentation on individual command, see \s-1COMMANDS\s0 below.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-config=\fR\fIconfig_file\fR" 4
.IX Item "--config=config_file"
Specify an alternate configuration file to use. The default behavior is to read
all configuration files in \fB/etc/fabs/fabs.yaml.d/\fR.
.IP "\fB\-x\fR \fIkey\fR=\fIvalue\fR" 4
.IX Item "-x key=value"
Specify an extra configuration option to use during execution of the given
command. This will override the configuration in any configuration files. See
\&\f(CWfabsys_config(1)\fR for more information about available configuration
directives.
.IP "\fB\-\-format\fR \fIformat\fR" 4
.IX Item "--format format"
Specify what format to use to output information for the given command.
Available formats are:
.RS 4
.IP "\fBtxt\fR" 4
.IX Item "txt"
Output information in human-readable text. The formatting and wording of output
in this format may change over time, and should not be relied upon for scripts.
This is the default option.
.IP "\fBjson\fR" 4
.IX Item "json"
Output information in a JSON-formatted object.
.RE
.RS 4
.RE
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
Causes \fBfabsys\fR to print its version to stdout and then exit.
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Prints a usage message for the specified subcommand, or a general usage message
if no subcommand is given.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
If the \f(CW\*(C`FABS_DEBUG\*(C'\fR environment variable is set to 1, it is roughly
equivalent to passing the command line options \*(L"\-x log/level=debug\*(R". However,
as opposed to setting this option on the command line or in the config file,
using this environment variable turns on debugging very early, before any
config files are loaded or command-line arguments are parsed. This can be
useful in debugging configuration loading or command-line argument parsing.
.SH "COMMANDS"
.IX Header "COMMANDS"
.ie n .IP """fabsys_backup\-inject(1)""" 4
.el .IP "\f(CWfabsys_backup\-inject(1)\fR" 4
.IX Item "fabsys_backup-inject(1)"
Inject a volume dump blob into \s-1FABS.\s0
.ie n .IP """fabsys_backup\-kill(1)""" 4
.el .IP "\f(CWfabsys_backup\-kill(1)\fR" 4
.IX Item "fabsys_backup-kill(1)"
Forcibly kill a running backup run.
.ie n .IP """fabsys_backup\-needed(1)""" 4
.el .IP "\f(CWfabsys_backup\-needed(1)\fR" 4
.IX Item "fabsys_backup-needed(1)"
Query \s-1FABS\s0 if a volume needs to be backed up.
.ie n .IP """fabsys_backup\-retry(1)""" 4
.el .IP "\f(CWfabsys_backup\-retry(1)\fR" 4
.IX Item "fabsys_backup-retry(1)"
Resume a failed backup run.
.ie n .IP """fabsys_backup\-start(1)""" 4
.el .IP "\f(CWfabsys_backup\-start(1)\fR" 4
.IX Item "fabsys_backup-start(1)"
Start a backup run.
.ie n .IP """fabsys_backup\-status(1)""" 4
.el .IP "\f(CWfabsys_backup\-status(1)\fR" 4
.IX Item "fabsys_backup-status(1)"
View the status of backup runs that are actively running or have failed due to
errors.
.ie n .IP "fabsys_config(1)" 4
.el .IP "\f(CWfabsys_config(1)\fR" 4
.IX Item "fabsys_config(1)"
Query information about the local configuration. The referenced manpage also
documents all known configuration directives.
.ie n .IP """fabsys_db\-init(1)""" 4
.el .IP "\f(CWfabsys_db\-init(1)\fR" 4
.IX Item "fabsys_db-init(1)"
Initialize the \s-1SQL\s0 database for fabs.
.ie n .IP """fabsys_dump\-find(1)""" 4
.el .IP "\f(CWfabsys_dump\-find(1)\fR" 4
.IX Item "fabsys_dump-find(1)"
Find dumps in the \s-1FABS\s0 backup database.
.ie n .IP """fabsys_dump\-list(1)""" 4
.el .IP "\f(CWfabsys_dump\-list(1)\fR" 4
.IX Item "fabsys_dump-list(1)"
List dumps in the \s-1FABS\s0 backup database.
.ie n .IP """fabsys_restore\-kill(1)""" 4
.el .IP "\f(CWfabsys_restore\-kill(1)\fR" 4
.IX Item "fabsys_restore-kill(1)"
Forcibly kill a running restore request.
.ie n .IP """fabsys_restore\-retry(1)""" 4
.el .IP "\f(CWfabsys_restore\-retry(1)\fR" 4
.IX Item "fabsys_restore-retry(1)"
Resume a failed restore request.
.ie n .IP """fabsys_restore\-start(1)""" 4
.el .IP "\f(CWfabsys_restore\-start(1)\fR" 4
.IX Item "fabsys_restore-start(1)"
Create a new restore request.
.ie n .IP """fabsys_restore\-status(1)""" 4
.el .IP "\f(CWfabsys_restore\-status(1)\fR" 4
.IX Item "fabsys_restore-status(1)"
View status of \s-1FABS\s0 restore requests.
.ie n .IP "fabsys_server(1)" 4
.el .IP "\f(CWfabsys_server(1)\fR" 4
.IX Item "fabsys_server(1)"
Run the fabs server, a server process for monitoring and driving forwards the
backup process.
.ie n .IP """fabsys_storage\-init(1)""" 4
.el .IP "\f(CWfabsys_storage\-init(1)\fR" 4
.IX Item "fabsys_storage-init(1)"
Initialize the local disk storage used for storing volume blobs on disk.
.ie n .IP """fabsys_storage\-trim(1)""" 4
.el .IP "\f(CWfabsys_storage\-trim(1)\fR" 4
.IX Item "fabsys_storage-trim(1)"
Find trimmable dumps in \s-1FABS\s0 storage.
.IP "fabsys_vars" 4
.IX Item "fabsys_vars"
This command prints various \*(L"compile-time\*(R" constants built in to the fabs
code.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2015, Sine Nomine Associates.
.PP
See the provided \s-1LICENSE\s0 file for licensing terms.
