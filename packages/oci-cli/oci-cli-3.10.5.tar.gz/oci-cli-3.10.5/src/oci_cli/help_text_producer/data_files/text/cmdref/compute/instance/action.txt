"action"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Examples


Description
===========

Performs one of the following power actions on the specified instance:

* **START** - Powers on the instance.

* **STOP** - Powers off the instance.

* **RESET** - Powers off the instance and then powers it back on.

* **SOFTSTOP** - Gracefully shuts down the instance by sending a
  shutdown command to the operating system. After waiting 15 minutes
  for the OS to shut down, the instance is powered off. If the
  applications that run on the instance take more than 15 minutes to
  shut down, they could be improperly stopped, resulting in data
  corruption. To avoid this, manually shut down the instance using the
  commands available in the OS before you softstop the instance.

* **SOFTRESET** - Gracefully reboots the instance by sending a
  shutdown command to the operating system. After waiting 15 minutes
  for the OS to shut down, the instance is powered off and then
  powered back on.

* **SENDDIAGNOSTICINTERRUPT** - For advanced users. **Warning: Sending
  a diagnostic interrupt to a live system can cause data corruption or
  system failure.** Sends a diagnostic interrupt that causes the
  instance’s OS to crash and then reboot. Before you send a diagnostic
  interrupt, you must configure the instance to generate a crash dump
  file when it crashes. The crash dump captures information about the
  state of the OS at the time of the crash. After the OS restarts, you
  can analyze the crash dump to diagnose the issue. For more
  information, see Sending a Diagnostic Interrupt.

   * **DIAGNOSTICREBOOT** - Powers off the instance, rebuilds it on
     the physical host, and then powers it back on. Before you send a
     diagnostic reboot, restart the instance’s OS, confirm that the
     instance and networking settings are configured correctly, and
     try other troubleshooting steps. Use diagnostic reboot as a final
     attempt to troubleshoot an unreachable instance. For virtual
     machine (VM) instances only. For more information, see Performing
     a Diagnostic Reboot.

   For more information about managing instance lifecycle states, see
   Stopping and Starting an Instance.


Usage
=====

   oci compute instance action [OPTIONS]


Required Parameters
===================

--action [text]

The action to perform on the instance. Allowed values are: STOP,
START, SOFTRESET, RESET, SOFTSTOP, SENDDIAGNOSTICINTERRUPT,
DIAGNOSTICREBOOT

--instance-id [text]

The OCID of the instance.


Optional Parameters
===================

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the etag from a
previous GET or POST response for that resource. The resource will be
updated or deleted only if the etag you provide matches the resource’s
current etag value.

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   CREATING_IMAGE, MOVING, PROVISIONING, RUNNING, STARTING, STOPPED, STOPPING, TERMINATED, TERMINATING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource to
see if it has reached the lifecycle state defined by "--wait-for-
state". Defaults to 30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--debug", "--defaults-file", "--
endpoint", "--generate-full-command-json-input", "--generate-param-
json-input", "--help", "--latest-version", "--max-retries", "--no-
retry", "--opc-client-request-id", "--opc-request-id", "--output", "--
profile", "--query", "--raw-output", "--region", "--release-info", "--
request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Examples
========

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export cidr_block=<substitute-value-of-cidr_block> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/network/vcn/create.html#cmdoption-cidr-block
       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/network/vcn/create.html#cmdoption-compartment-id
       export availability_domain=<substitute-value-of-availability_domain> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/compute/instance/launch.html#cmdoption-availability-domain
       export image_id=<substitute-value-of-image_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/compute/instance/launch.html#cmdoption-image-id
       export shape=<substitute-value-of-shape> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/compute/instance/launch.html#cmdoption-shape
       export action=<substitute-value-of-action> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/compute/instance/action.html#cmdoption-action

       vcn_id=$(oci network vcn create --cidr-block $cidr_block --compartment-id $compartment_id --query data.id --raw-output)

       subnet_id=$(oci network subnet create --cidr-block $cidr_block --compartment-id $compartment_id --vcn-id $vcn_id --query data.id --raw-output)

       instance_id=$(oci compute instance launch --availability-domain $availability_domain --compartment-id $compartment_id --image-id $image_id --shape $shape --subnet-id $subnet_id --query data.id --raw-output)

       oci compute instance action --action $action --instance-id $instance_id
