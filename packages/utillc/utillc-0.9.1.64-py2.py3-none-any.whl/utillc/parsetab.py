
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSCOLON COMMA DIVIDE DIVIDE2 DOT EKON EQUALS LBRACKET LPAREN MINUS NAME NUMBER PLUS RBRACKET RPAREN STRING TIMEStop : expressionsexpressions : expressionexpressions : expressions COMMA expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression COLON expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : MINUS expression %prec UMINUSexpressionsV : expressionsV : expressionsexpression : LPAREN expressions RPAREN\n                  | name LBRACKET expressions RBRACKET\n                  | name LPAREN expressionsV RPAREN\n    expression : NUMBERexpression : nameexpression : STRING name : name DOT NAME name : NAME'
    
_lr_action_items = {'MINUS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,21,22,23,24,25,26,27,31,32,33,],[4,12,4,4,-16,-15,-17,-19,4,4,4,4,4,4,-9,4,4,12,-4,-5,12,-7,-8,-12,-18,-13,-14,]),'LPAREN':([0,4,5,6,9,10,11,12,13,14,15,18,19,31,],[5,5,5,19,-19,5,5,5,5,5,5,5,5,-18,]),'NUMBER':([0,4,5,10,11,12,13,14,15,18,19,],[7,7,7,7,7,7,7,7,7,7,7,]),'STRING':([0,4,5,10,11,12,13,14,15,18,19,],[8,8,8,8,8,8,8,8,8,8,8,]),'NAME':([0,4,5,10,11,12,13,14,15,18,19,20,],[9,9,9,9,9,9,9,9,9,9,9,31,]),'$end':([1,2,3,6,7,8,9,16,21,22,23,24,25,26,27,31,32,33,],[0,-1,-2,-16,-15,-17,-19,-9,-3,-4,-5,-6,-7,-8,-12,-18,-13,-14,]),'COMMA':([2,3,6,7,8,9,16,17,21,22,23,24,25,26,27,28,30,31,32,33,],[10,-2,-16,-15,-17,-19,-9,10,-3,-4,-5,-6,-7,-8,-12,10,10,-18,-13,-14,]),'RPAREN':([3,6,7,8,9,16,17,19,21,22,23,24,25,26,27,29,30,31,32,33,],[-2,-16,-15,-17,-19,-9,27,-10,-3,-4,-5,-6,-7,-8,-12,33,-11,-18,-13,-14,]),'RBRACKET':([3,6,7,8,9,16,21,22,23,24,25,26,27,28,31,32,33,],[-2,-16,-15,-17,-19,-9,-3,-4,-5,-6,-7,-8,-12,32,-18,-13,-14,]),'PLUS':([3,6,7,8,9,16,21,22,23,24,25,26,27,31,32,33,],[11,-16,-15,-17,-19,-9,11,-4,-5,11,-7,-8,-12,-18,-13,-14,]),'COLON':([3,6,7,8,9,16,21,22,23,24,25,26,27,31,32,33,],[13,-16,-15,-17,-19,-9,13,-4,-5,13,-7,-8,-12,-18,-13,-14,]),'TIMES':([3,6,7,8,9,16,21,22,23,24,25,26,27,31,32,33,],[14,-16,-15,-17,-19,-9,14,14,14,14,-7,-8,-12,-18,-13,-14,]),'DIVIDE':([3,6,7,8,9,16,21,22,23,24,25,26,27,31,32,33,],[15,-16,-15,-17,-19,-9,15,15,15,15,-7,-8,-12,-18,-13,-14,]),'LBRACKET':([6,9,31,],[18,-19,-18,]),'DOT':([6,9,31,],[20,-19,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'top':([0,],[1,]),'expressions':([0,5,18,19,],[2,17,28,30,]),'expression':([0,4,5,10,11,12,13,14,15,18,19,],[3,16,3,21,22,23,24,25,26,3,3,]),'name':([0,4,5,10,11,12,13,14,15,18,19,],[6,6,6,6,6,6,6,6,6,6,6,]),'expressionsV':([19,],[29,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> top","S'",1,None,None,None),
  ('top -> expressions','top',1,'p_top','utillc.py',135),
  ('expressions -> expression','expressions',1,'p_expressions_1','utillc.py',139),
  ('expressions -> expressions COMMA expression','expressions',3,'p_expressions_2','utillc.py',143),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','utillc.py',147),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','utillc.py',148),
  ('expression -> expression COLON expression','expression',3,'p_expression_binop','utillc.py',149),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','utillc.py',150),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','utillc.py',151),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','utillc.py',155),
  ('expressionsV -> <empty>','expressionsV',0,'p_expressionsV_1','utillc.py',159),
  ('expressionsV -> expressions','expressionsV',1,'p_expressionsV_2','utillc.py',163),
  ('expression -> LPAREN expressions RPAREN','expression',3,'p_expression_group','utillc.py',168),
  ('expression -> name LBRACKET expressions RBRACKET','expression',4,'p_expression_group','utillc.py',169),
  ('expression -> name LPAREN expressionsV RPAREN','expression',4,'p_expression_group','utillc.py',170),
  ('expression -> NUMBER','expression',1,'p_expression_number','utillc.py',180),
  ('expression -> name','expression',1,'p_expression_name','utillc.py',184),
  ('expression -> STRING','expression',1,'p_expression_string','utillc.py',188),
  ('name -> name DOT NAME','name',3,'p_name_2','utillc.py',192),
  ('name -> NAME','name',1,'p_name_1','utillc.py',196),
]
