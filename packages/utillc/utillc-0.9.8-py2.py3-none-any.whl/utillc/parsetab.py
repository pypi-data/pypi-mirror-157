
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSCOLONleftTIMESDIVIDErightUMINUSCOLON COMMA DIVIDE DIVIDE2 DOT EQUALS LBRACKET LPAREN MINUS NAME NUMBER PLUS RBRACKET RPAREN STRING TIMEStop : expressionsexpressions : expressionexpressions : expressions COMMA expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression EQUALS expression\n                  | expression DIVIDE2 expression\n                  | expression DIVIDE expression name : expression DOT dot_namesexpression : MINUS expression %prec UMINUSexpression : LPAREN expressions RPAREN\n                  | name LBRACKET expressionsBE RBRACKET\n                  | name LPAREN expressionsV RPAREN\n    expression : NUMBERexpression : nameexpression : STRINGdot_names : NAMEdot_names : dot_names DOT NAMEexpressionsBE : expressionsBE : expressionsBEE COMMA expressionsBEexpressionsBE : expressionsBEEexpressionsBEE : expressionsBEE : expressionexpressionsBEE : COLONexpressionsBEE : expression COLON expressionsBEEexpressionsV : expressionsV : expressions name : NAME'
    
_lr_action_items = {'MINUS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,28,29,30,31,34,39,40,41,42,43,],[4,12,4,4,-16,-15,-17,-29,4,4,4,4,4,4,4,-11,4,4,12,-4,-5,-6,12,12,-9,-10,-18,-12,12,-13,4,4,-14,-19,]),'LPAREN':([0,4,5,6,9,10,11,12,13,14,15,16,20,21,29,30,40,41,43,],[5,5,5,21,-29,5,5,5,5,5,5,5,5,5,-10,-18,5,5,-19,]),'NUMBER':([0,4,5,10,11,12,13,14,15,16,20,21,40,41,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'STRING':([0,4,5,10,11,12,13,14,15,16,20,21,40,41,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'NAME':([0,4,5,10,11,12,13,14,15,16,17,20,21,38,40,41,],[9,9,9,9,9,9,9,9,9,9,30,9,9,43,9,9,]),'$end':([1,2,3,6,7,8,9,18,22,23,24,25,26,27,28,29,30,31,39,42,43,],[0,-1,-2,-16,-15,-17,-29,-11,-3,-4,-5,-6,-7,-8,-9,-10,-18,-12,-13,-14,-19,]),'COMMA':([2,3,6,7,8,9,18,19,20,22,23,24,25,26,27,28,29,30,31,33,34,35,37,39,40,41,42,43,45,],[10,-2,-16,-15,-17,-29,-11,10,-23,-3,-4,-5,-6,-7,-8,-9,-10,-18,-12,40,-24,-25,10,-13,-23,-23,-14,-19,-26,]),'RPAREN':([3,6,7,8,9,18,19,21,22,23,24,25,26,27,28,29,30,31,36,37,39,42,43,],[-2,-16,-15,-17,-29,-11,31,-27,-3,-4,-5,-6,-7,-8,-9,-10,-18,-12,42,-28,-13,-14,-19,]),'PLUS':([3,6,7,8,9,18,22,23,24,25,26,27,28,29,30,31,34,39,42,43,],[11,-16,-15,-17,-29,-11,11,-4,-5,-6,11,11,-9,-10,-18,-12,11,-13,-14,-19,]),'TIMES':([3,6,7,8,9,18,22,23,24,25,26,27,28,29,30,31,34,39,42,43,],[13,-16,-15,-17,-29,-11,13,13,13,-6,13,13,-9,-10,-18,-12,13,-13,-14,-19,]),'EQUALS':([3,6,7,8,9,18,22,23,24,25,26,27,28,29,30,31,34,39,42,43,],[14,-16,-15,-17,-29,-11,14,-4,-5,-6,14,14,-9,-10,-18,-12,14,-13,-14,-19,]),'DIVIDE2':([3,6,7,8,9,18,22,23,24,25,26,27,28,29,30,31,34,39,42,43,],[15,-16,-15,-17,-29,-11,15,-4,-5,-6,15,15,-9,-10,-18,-12,15,-13,-14,-19,]),'DIVIDE':([3,6,7,8,9,18,22,23,24,25,26,27,28,29,30,31,34,39,42,43,],[16,-16,-15,-17,-29,-11,16,16,16,-6,16,16,-9,-10,-18,-12,16,-13,-14,-19,]),'DOT':([3,6,7,8,9,18,22,23,24,25,26,27,28,29,30,31,34,39,42,43,],[17,-16,-15,-17,-29,-11,17,-4,-5,-6,17,17,-9,38,-18,-12,17,-13,-14,-19,]),'LBRACKET':([6,9,29,30,43,],[20,-29,-10,-18,-19,]),'COLON':([6,7,8,9,18,20,23,24,25,26,27,28,29,30,31,34,39,40,41,42,43,],[-16,-15,-17,-29,-11,35,-4,-5,-6,-7,-8,-9,-10,-18,-12,41,-13,35,35,-14,-19,]),'RBRACKET':([6,7,8,9,18,20,23,24,25,26,27,28,29,30,31,32,33,34,35,39,40,41,42,43,44,45,],[-16,-15,-17,-29,-11,-20,-4,-5,-6,-7,-8,-9,-10,-18,-12,39,-22,-24,-25,-13,-20,-23,-14,-19,-21,-26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'top':([0,],[1,]),'expressions':([0,5,21,],[2,19,37,]),'expression':([0,4,5,10,11,12,13,14,15,16,20,21,40,41,],[3,18,3,22,23,24,25,26,27,28,34,3,34,34,]),'name':([0,4,5,10,11,12,13,14,15,16,20,21,40,41,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'dot_names':([17,],[29,]),'expressionsBE':([20,40,],[32,44,]),'expressionsBEE':([20,40,41,],[33,33,45,]),'expressionsV':([21,],[36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> top","S'",1,None,None,None),
  ('top -> expressions','top',1,'p_top','utillc.py',124),
  ('expressions -> expression','expressions',1,'p_expressions_1','utillc.py',128),
  ('expressions -> expressions COMMA expression','expressions',3,'p_expressions_2','utillc.py',132),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','utillc.py',137),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','utillc.py',138),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','utillc.py',139),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop','utillc.py',140),
  ('expression -> expression DIVIDE2 expression','expression',3,'p_expression_binop','utillc.py',141),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','utillc.py',142),
  ('name -> expression DOT dot_names','name',3,'p_expression_dot','utillc.py',146),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','utillc.py',150),
  ('expression -> LPAREN expressions RPAREN','expression',3,'p_expression_group','utillc.py',156),
  ('expression -> name LBRACKET expressionsBE RBRACKET','expression',4,'p_expression_group','utillc.py',157),
  ('expression -> name LPAREN expressionsV RPAREN','expression',4,'p_expression_group','utillc.py',158),
  ('expression -> NUMBER','expression',1,'p_expression_number','utillc.py',168),
  ('expression -> name','expression',1,'p_expression_name','utillc.py',172),
  ('expression -> STRING','expression',1,'p_expression_string','utillc.py',176),
  ('dot_names -> NAME','dot_names',1,'p_dot_names_1','utillc.py',180),
  ('dot_names -> dot_names DOT NAME','dot_names',3,'p_dot_names_2','utillc.py',184),
  ('expressionsBE -> <empty>','expressionsBE',0,'p_expressionsBE_1','utillc.py',189),
  ('expressionsBE -> expressionsBEE COMMA expressionsBE','expressionsBE',3,'p_expressionsBE_2','utillc.py',193),
  ('expressionsBE -> expressionsBEE','expressionsBE',1,'p_expressionsBE_3','utillc.py',197),
  ('expressionsBEE -> <empty>','expressionsBEE',0,'p_expressionsBEE_0','utillc.py',201),
  ('expressionsBEE -> expression','expressionsBEE',1,'p_expressionsBEE_1','utillc.py',204),
  ('expressionsBEE -> COLON','expressionsBEE',1,'p_expressionsBEE_2','utillc.py',207),
  ('expressionsBEE -> expression COLON expressionsBEE','expressionsBEE',3,'p_expressionsBEE_3','utillc.py',210),
  ('expressionsV -> <empty>','expressionsV',0,'p_expressionsV_1','utillc.py',215),
  ('expressionsV -> expressions','expressionsV',1,'p_expressionsV_2','utillc.py',219),
  ('name -> NAME','name',1,'p_name_1','utillc.py',227),
]
