# coding: utf-8

"""
    Sangfor AD API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 7.0.5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import adapi_sdk
from adapi_sdk.api.http_rewrite_api import HttpRewriteApi  # noqa: E501
from adapi_sdk.rest import ApiException


class TestHttpRewriteApi(unittest.TestCase):
    """HttpRewriteApi unit test stubs"""

    def setUp(self):
        self.api = adapi_sdk.api.http_rewrite_api.HttpRewriteApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_http_rewrite_request_list(self):
        """Test case for add_http_rewrite_request_list

        create new http-rewrite-request  # noqa: E501
        """
        pass

    def test_add_http_rewrite_response_list(self):
        """Test case for add_http_rewrite_response_list

        create new http-rewrite-response  # noqa: E501
        """
        pass

    def test_clear_http_rewrite_hit(self):
        """Test case for clear_http_rewrite_hit

        clear http-rewrite hit  # noqa: E501
        """
        pass

    def test_create_http_rewrite_request(self):
        """Test case for create_http_rewrite_request

        create new http-rewrite-request  # noqa: E501
        """
        pass

    def test_create_http_rewrite_response(self):
        """Test case for create_http_rewrite_response

        create new http-rewrite-response  # noqa: E501
        """
        pass

    def test_delete_http_rewrite_request(self):
        """Test case for delete_http_rewrite_request

        delete specific http-rewrite-request  # noqa: E501
        """
        pass

    def test_delete_http_rewrite_response(self):
        """Test case for delete_http_rewrite_response

        delete specific http-rewrite-response  # noqa: E501
        """
        pass

    def test_edit_http_rewrite_request(self):
        """Test case for edit_http_rewrite_request

        modify specific http-rewrite-request  # noqa: E501
        """
        pass

    def test_edit_http_rewrite_response(self):
        """Test case for edit_http_rewrite_response

        modify specific http-rewrite-response  # noqa: E501
        """
        pass

    def test_get_http_rewrite(self):
        """Test case for get_http_rewrite

        get specific http-rewrite  # noqa: E501
        """
        pass

    def test_get_http_rewrite_0(self):
        """Test case for get_http_rewrite_0

        get specific http-rewrite  # noqa: E501
        """
        pass

    def test_get_http_rewrite_list(self):
        """Test case for get_http_rewrite_list

        get all http-rewrite  # noqa: E501
        """
        pass

    def test_get_http_rewrite_list_0(self):
        """Test case for get_http_rewrite_list_0

        get all http-rewrite  # noqa: E501
        """
        pass

    def test_get_http_rewrite_request(self):
        """Test case for get_http_rewrite_request

        get specific http-rewrite-request  # noqa: E501
        """
        pass

    def test_get_http_rewrite_request_list(self):
        """Test case for get_http_rewrite_request_list

        get all http-rewrite-request  # noqa: E501
        """
        pass

    def test_get_http_rewrite_response(self):
        """Test case for get_http_rewrite_response

        get specific http-rewrite-response  # noqa: E501
        """
        pass

    def test_get_http_rewrite_response_list(self):
        """Test case for get_http_rewrite_response_list

        get all http-rewrite-response  # noqa: E501
        """
        pass

    def test_replace_http_rewrite_request(self):
        """Test case for replace_http_rewrite_request

        replace specific http-rewrite-request  # noqa: E501
        """
        pass

    def test_replace_http_rewrite_response(self):
        """Test case for replace_http_rewrite_response

        replace specific http-rewrite-response  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
