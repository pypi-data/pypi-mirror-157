# coding: utf-8

"""
    Sangfor AD API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 7.0.5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from adapi_sdk.models.config_application_identification import ConfigApplicationIdentification  # noqa: F401,E501


class ConfigApplicationIdentificationLibrary(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'version': 'str',
        'rule_count': 'int',
        'ebank': 'list[ConfigApplicationIdentification]',
        'web_streaming_media': 'list[ConfigApplicationIdentification]',
        'mobile_streaming_media': 'list[ConfigApplicationIdentification]',
        'mobile_game': 'list[ConfigApplicationIdentification]',
        'client_game': 'list[ConfigApplicationIdentification]',
        'webpage_game': 'list[ConfigApplicationIdentification]'
    }

    attribute_map = {
        'version': 'version',
        'rule_count': 'rule_count',
        'ebank': 'ebank',
        'web_streaming_media': 'web_streaming_media',
        'mobile_streaming_media': 'mobile_streaming_media',
        'mobile_game': 'mobile_game',
        'client_game': 'client_game',
        'webpage_game': 'webpage_game'
    }

    def __init__(self, version=None, rule_count=None, ebank=None, web_streaming_media=None, mobile_streaming_media=None, mobile_game=None, client_game=None, webpage_game=None):  # noqa: E501
        """ConfigApplicationIdentificationLibrary - a model defined in Swagger"""  # noqa: E501

        self._version = None
        self._rule_count = None
        self._ebank = None
        self._web_streaming_media = None
        self._mobile_streaming_media = None
        self._mobile_game = None
        self._client_game = None
        self._webpage_game = None
        self.discriminator = None

        if version is not None:
            self.version = version
        if rule_count is not None:
            self.rule_count = rule_count
        if ebank is not None:
            self.ebank = ebank
        if web_streaming_media is not None:
            self.web_streaming_media = web_streaming_media
        if mobile_streaming_media is not None:
            self.mobile_streaming_media = mobile_streaming_media
        if mobile_game is not None:
            self.mobile_game = mobile_game
        if client_game is not None:
            self.client_game = client_game
        if webpage_game is not None:
            self.webpage_game = webpage_game

    @property
    def version(self):
        """Gets the version of this ConfigApplicationIdentificationLibrary.  # noqa: E501

        版本。  # noqa: E501

        :return: The version of this ConfigApplicationIdentificationLibrary.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ConfigApplicationIdentificationLibrary.

        版本。  # noqa: E501

        :param version: The version of this ConfigApplicationIdentificationLibrary.  # noqa: E501
        :type: str
        """

        self._version = version

    @property
    def rule_count(self):
        """Gets the rule_count of this ConfigApplicationIdentificationLibrary.  # noqa: E501

        规则数量。  # noqa: E501

        :return: The rule_count of this ConfigApplicationIdentificationLibrary.  # noqa: E501
        :rtype: int
        """
        return self._rule_count

    @rule_count.setter
    def rule_count(self, rule_count):
        """Sets the rule_count of this ConfigApplicationIdentificationLibrary.

        规则数量。  # noqa: E501

        :param rule_count: The rule_count of this ConfigApplicationIdentificationLibrary.  # noqa: E501
        :type: int
        """

        self._rule_count = rule_count

    @property
    def ebank(self):
        """Gets the ebank of this ConfigApplicationIdentificationLibrary.  # noqa: E501

        网上银行。  # noqa: E501

        :return: The ebank of this ConfigApplicationIdentificationLibrary.  # noqa: E501
        :rtype: list[ConfigApplicationIdentification]
        """
        return self._ebank

    @ebank.setter
    def ebank(self, ebank):
        """Sets the ebank of this ConfigApplicationIdentificationLibrary.

        网上银行。  # noqa: E501

        :param ebank: The ebank of this ConfigApplicationIdentificationLibrary.  # noqa: E501
        :type: list[ConfigApplicationIdentification]
        """

        self._ebank = ebank

    @property
    def web_streaming_media(self):
        """Gets the web_streaming_media of this ConfigApplicationIdentificationLibrary.  # noqa: E501

        web流媒体。  # noqa: E501

        :return: The web_streaming_media of this ConfigApplicationIdentificationLibrary.  # noqa: E501
        :rtype: list[ConfigApplicationIdentification]
        """
        return self._web_streaming_media

    @web_streaming_media.setter
    def web_streaming_media(self, web_streaming_media):
        """Sets the web_streaming_media of this ConfigApplicationIdentificationLibrary.

        web流媒体。  # noqa: E501

        :param web_streaming_media: The web_streaming_media of this ConfigApplicationIdentificationLibrary.  # noqa: E501
        :type: list[ConfigApplicationIdentification]
        """

        self._web_streaming_media = web_streaming_media

    @property
    def mobile_streaming_media(self):
        """Gets the mobile_streaming_media of this ConfigApplicationIdentificationLibrary.  # noqa: E501

        音频视频。  # noqa: E501

        :return: The mobile_streaming_media of this ConfigApplicationIdentificationLibrary.  # noqa: E501
        :rtype: list[ConfigApplicationIdentification]
        """
        return self._mobile_streaming_media

    @mobile_streaming_media.setter
    def mobile_streaming_media(self, mobile_streaming_media):
        """Sets the mobile_streaming_media of this ConfigApplicationIdentificationLibrary.

        音频视频。  # noqa: E501

        :param mobile_streaming_media: The mobile_streaming_media of this ConfigApplicationIdentificationLibrary.  # noqa: E501
        :type: list[ConfigApplicationIdentification]
        """

        self._mobile_streaming_media = mobile_streaming_media

    @property
    def mobile_game(self):
        """Gets the mobile_game of this ConfigApplicationIdentificationLibrary.  # noqa: E501

        移动游戏。  # noqa: E501

        :return: The mobile_game of this ConfigApplicationIdentificationLibrary.  # noqa: E501
        :rtype: list[ConfigApplicationIdentification]
        """
        return self._mobile_game

    @mobile_game.setter
    def mobile_game(self, mobile_game):
        """Sets the mobile_game of this ConfigApplicationIdentificationLibrary.

        移动游戏。  # noqa: E501

        :param mobile_game: The mobile_game of this ConfigApplicationIdentificationLibrary.  # noqa: E501
        :type: list[ConfigApplicationIdentification]
        """

        self._mobile_game = mobile_game

    @property
    def client_game(self):
        """Gets the client_game of this ConfigApplicationIdentificationLibrary.  # noqa: E501

        游戏。  # noqa: E501

        :return: The client_game of this ConfigApplicationIdentificationLibrary.  # noqa: E501
        :rtype: list[ConfigApplicationIdentification]
        """
        return self._client_game

    @client_game.setter
    def client_game(self, client_game):
        """Sets the client_game of this ConfigApplicationIdentificationLibrary.

        游戏。  # noqa: E501

        :param client_game: The client_game of this ConfigApplicationIdentificationLibrary.  # noqa: E501
        :type: list[ConfigApplicationIdentification]
        """

        self._client_game = client_game

    @property
    def webpage_game(self):
        """Gets the webpage_game of this ConfigApplicationIdentificationLibrary.  # noqa: E501

        网页游戏。  # noqa: E501

        :return: The webpage_game of this ConfigApplicationIdentificationLibrary.  # noqa: E501
        :rtype: list[ConfigApplicationIdentification]
        """
        return self._webpage_game

    @webpage_game.setter
    def webpage_game(self, webpage_game):
        """Sets the webpage_game of this ConfigApplicationIdentificationLibrary.

        网页游戏。  # noqa: E501

        :param webpage_game: The webpage_game of this ConfigApplicationIdentificationLibrary.  # noqa: E501
        :type: list[ConfigApplicationIdentification]
        """

        self._webpage_game = webpage_game

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ConfigApplicationIdentificationLibrary, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConfigApplicationIdentificationLibrary):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
