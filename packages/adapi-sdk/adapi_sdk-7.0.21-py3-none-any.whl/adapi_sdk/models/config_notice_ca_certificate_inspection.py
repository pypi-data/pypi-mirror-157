# coding: utf-8

"""
    Sangfor AD API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 7.0.5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class ConfigNoticeCaCertificateInspection(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'result': 'str',
        'certificate_expire_soon': 'list[str]',
        'certificate_expired': 'list[str]'
    }

    attribute_map = {
        'result': 'result',
        'certificate_expire_soon': 'certificate_expire_soon',
        'certificate_expired': 'certificate_expired'
    }

    def __init__(self, result=None, certificate_expire_soon=None, certificate_expired=None):  # noqa: E501
        """ConfigNoticeCaCertificateInspection - a model defined in Swagger"""  # noqa: E501

        self._result = None
        self._certificate_expire_soon = None
        self._certificate_expired = None
        self.discriminator = None

        if result is not None:
            self.result = result
        if certificate_expire_soon is not None:
            self.certificate_expire_soon = certificate_expire_soon
        if certificate_expired is not None:
            self.certificate_expired = certificate_expired

    @property
    def result(self):
        """Gets the result of this ConfigNoticeCaCertificateInspection.  # noqa: E501

        所有CA证书中最严重的证书状态，VALID有效，EXPIRE-SOON即将过期（不到一个月），EXPIRED已经过期，INVALID无效证书  # noqa: E501

        :return: The result of this ConfigNoticeCaCertificateInspection.  # noqa: E501
        :rtype: str
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this ConfigNoticeCaCertificateInspection.

        所有CA证书中最严重的证书状态，VALID有效，EXPIRE-SOON即将过期（不到一个月），EXPIRED已经过期，INVALID无效证书  # noqa: E501

        :param result: The result of this ConfigNoticeCaCertificateInspection.  # noqa: E501
        :type: str
        """
        allowed_values = ["VALID", "EXPIRE-SOON", "EXPIRED"]  # noqa: E501
        if result not in allowed_values:
            raise ValueError(
                "Invalid value for `result` ({0}), must be one of {1}"  # noqa: E501
                .format(result, allowed_values)
            )

        self._result = result

    @property
    def certificate_expire_soon(self):
        """Gets the certificate_expire_soon of this ConfigNoticeCaCertificateInspection.  # noqa: E501

        即将过期的CA证书列表  # noqa: E501

        :return: The certificate_expire_soon of this ConfigNoticeCaCertificateInspection.  # noqa: E501
        :rtype: list[str]
        """
        return self._certificate_expire_soon

    @certificate_expire_soon.setter
    def certificate_expire_soon(self, certificate_expire_soon):
        """Sets the certificate_expire_soon of this ConfigNoticeCaCertificateInspection.

        即将过期的CA证书列表  # noqa: E501

        :param certificate_expire_soon: The certificate_expire_soon of this ConfigNoticeCaCertificateInspection.  # noqa: E501
        :type: list[str]
        """

        self._certificate_expire_soon = certificate_expire_soon

    @property
    def certificate_expired(self):
        """Gets the certificate_expired of this ConfigNoticeCaCertificateInspection.  # noqa: E501

        已经过期的CA证书列表  # noqa: E501

        :return: The certificate_expired of this ConfigNoticeCaCertificateInspection.  # noqa: E501
        :rtype: list[str]
        """
        return self._certificate_expired

    @certificate_expired.setter
    def certificate_expired(self, certificate_expired):
        """Sets the certificate_expired of this ConfigNoticeCaCertificateInspection.

        已经过期的CA证书列表  # noqa: E501

        :param certificate_expired: The certificate_expired of this ConfigNoticeCaCertificateInspection.  # noqa: E501
        :type: list[str]
        """

        self._certificate_expired = certificate_expired

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ConfigNoticeCaCertificateInspection, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConfigNoticeCaCertificateInspection):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
