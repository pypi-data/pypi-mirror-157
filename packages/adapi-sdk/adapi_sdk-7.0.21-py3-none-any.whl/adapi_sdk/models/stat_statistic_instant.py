# coding: utf-8

"""
    Sangfor AD API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 7.0.5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from adapi_sdk.models.stat_statistic_unit import StatStatisticUnit  # noqa: F401,E501


class StatStatisticInstant(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'model': 'str',
        'unit': 'StatStatisticUnit',
        'timestamp': 'int',
        'value': 'int'
    }

    attribute_map = {
        'model': 'model',
        'unit': 'unit',
        'timestamp': 'timestamp',
        'value': 'value'
    }

    def __init__(self, model=None, unit=None, timestamp=None, value=None):  # noqa: E501
        """StatStatisticInstant - a model defined in Swagger"""  # noqa: E501

        self._model = None
        self._unit = None
        self._timestamp = None
        self._value = None
        self.discriminator = None

        if model is not None:
            self.model = model
        if unit is not None:
            self.unit = unit
        if timestamp is not None:
            self.timestamp = timestamp
        if value is not None:
            self.value = value

    @property
    def model(self):
        """Gets the model of this StatStatisticInstant.  # noqa: E501

        统计数据模型（INSTANT实时统计/ACCUMULATE累积数据/TREND-LAST-HOUR最近60分钟趋势/TREND-LAST-DAY最近24小时趋势/TREND-LAST-WEEK最近7天趋势）  # noqa: E501

        :return: The model of this StatStatisticInstant.  # noqa: E501
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this StatStatisticInstant.

        统计数据模型（INSTANT实时统计/ACCUMULATE累积数据/TREND-LAST-HOUR最近60分钟趋势/TREND-LAST-DAY最近24小时趋势/TREND-LAST-WEEK最近7天趋势）  # noqa: E501

        :param model: The model of this StatStatisticInstant.  # noqa: E501
        :type: str
        """
        allowed_values = ["INSTANT"]  # noqa: E501
        if model not in allowed_values:
            raise ValueError(
                "Invalid value for `model` ({0}), must be one of {1}"  # noqa: E501
                .format(model, allowed_values)
            )

        self._model = model

    @property
    def unit(self):
        """Gets the unit of this StatStatisticInstant.  # noqa: E501


        :return: The unit of this StatStatisticInstant.  # noqa: E501
        :rtype: StatStatisticUnit
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this StatStatisticInstant.


        :param unit: The unit of this StatStatisticInstant.  # noqa: E501
        :type: StatStatisticUnit
        """

        self._unit = unit

    @property
    def timestamp(self):
        """Gets the timestamp of this StatStatisticInstant.  # noqa: E501

        查询数据时间戳  # noqa: E501

        :return: The timestamp of this StatStatisticInstant.  # noqa: E501
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this StatStatisticInstant.

        查询数据时间戳  # noqa: E501

        :param timestamp: The timestamp of this StatStatisticInstant.  # noqa: E501
        :type: int
        """

        self._timestamp = timestamp

    @property
    def value(self):
        """Gets the value of this StatStatisticInstant.  # noqa: E501

        统计数据值  # noqa: E501

        :return: The value of this StatStatisticInstant.  # noqa: E501
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this StatStatisticInstant.

        统计数据值  # noqa: E501

        :param value: The value of this StatStatisticInstant.  # noqa: E501
        :type: int
        """

        self._value = value

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(StatStatisticInstant, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, StatStatisticInstant):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
