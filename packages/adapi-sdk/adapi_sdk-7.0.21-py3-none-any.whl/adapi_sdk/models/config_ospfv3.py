# coding: utf-8

"""
    Sangfor AD API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 7.0.5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from adapi_sdk.models.config_ospfv3_route_aggregate import ConfigOspfv3RouteAggregate  # noqa: F401,E501


class ConfigOspfv3(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'state': 'str',
        'route_id': 'str',
        'redistribute_direct_route': 'str',
        'redistribute_static_route': 'str',
        'route_aggregate': 'list[ConfigOspfv3RouteAggregate]'
    }

    attribute_map = {
        'state': 'state',
        'route_id': 'route_id',
        'redistribute_direct_route': 'redistribute_direct_route',
        'redistribute_static_route': 'redistribute_static_route',
        'route_aggregate': 'route_aggregate'
    }

    def __init__(self, state='ENABLE', route_id=None, redistribute_direct_route='DISABLE', redistribute_static_route='DISABLE', route_aggregate=None):  # noqa: E501
        """ConfigOspfv3 - a model defined in Swagger"""  # noqa: E501

        self._state = None
        self._route_id = None
        self._redistribute_direct_route = None
        self._redistribute_static_route = None
        self._route_aggregate = None
        self.discriminator = None

        if state is not None:
            self.state = state
        if route_id is not None:
            self.route_id = route_id
        if redistribute_direct_route is not None:
            self.redistribute_direct_route = redistribute_direct_route
        if redistribute_static_route is not None:
            self.redistribute_static_route = redistribute_static_route
        if route_aggregate is not None:
            self.route_aggregate = route_aggregate

    @property
    def state(self):
        """Gets the state of this ConfigOspfv3.  # noqa: E501

        ospfv3全局配置状态,enable 表示启用;disable 表示禁用。  # noqa: E501

        :return: The state of this ConfigOspfv3.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ConfigOspfv3.

        ospfv3全局配置状态,enable 表示启用;disable 表示禁用。  # noqa: E501

        :param state: The state of this ConfigOspfv3.  # noqa: E501
        :type: str
        """
        allowed_values = ["ENABLE", "DISABLE"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"  # noqa: E501
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def route_id(self):
        """Gets the route_id of this ConfigOspfv3.  # noqa: E501

        路由器ID，必须为IPv4地址格式。  # noqa: E501

        :return: The route_id of this ConfigOspfv3.  # noqa: E501
        :rtype: str
        """
        return self._route_id

    @route_id.setter
    def route_id(self, route_id):
        """Sets the route_id of this ConfigOspfv3.

        路由器ID，必须为IPv4地址格式。  # noqa: E501

        :param route_id: The route_id of this ConfigOspfv3.  # noqa: E501
        :type: str
        """

        self._route_id = route_id

    @property
    def redistribute_direct_route(self):
        """Gets the redistribute_direct_route of this ConfigOspfv3.  # noqa: E501

        默认路由强制重分发状态,enable 表示启用;disable 表示禁用。  # noqa: E501

        :return: The redistribute_direct_route of this ConfigOspfv3.  # noqa: E501
        :rtype: str
        """
        return self._redistribute_direct_route

    @redistribute_direct_route.setter
    def redistribute_direct_route(self, redistribute_direct_route):
        """Sets the redistribute_direct_route of this ConfigOspfv3.

        默认路由强制重分发状态,enable 表示启用;disable 表示禁用。  # noqa: E501

        :param redistribute_direct_route: The redistribute_direct_route of this ConfigOspfv3.  # noqa: E501
        :type: str
        """
        allowed_values = ["ENABLE", "DISABLE"]  # noqa: E501
        if redistribute_direct_route not in allowed_values:
            raise ValueError(
                "Invalid value for `redistribute_direct_route` ({0}), must be one of {1}"  # noqa: E501
                .format(redistribute_direct_route, allowed_values)
            )

        self._redistribute_direct_route = redistribute_direct_route

    @property
    def redistribute_static_route(self):
        """Gets the redistribute_static_route of this ConfigOspfv3.  # noqa: E501

        静态路由重分发状态,enable 表示启用;disable 表示禁用。  # noqa: E501

        :return: The redistribute_static_route of this ConfigOspfv3.  # noqa: E501
        :rtype: str
        """
        return self._redistribute_static_route

    @redistribute_static_route.setter
    def redistribute_static_route(self, redistribute_static_route):
        """Sets the redistribute_static_route of this ConfigOspfv3.

        静态路由重分发状态,enable 表示启用;disable 表示禁用。  # noqa: E501

        :param redistribute_static_route: The redistribute_static_route of this ConfigOspfv3.  # noqa: E501
        :type: str
        """
        allowed_values = ["ENABLE", "DISABLE"]  # noqa: E501
        if redistribute_static_route not in allowed_values:
            raise ValueError(
                "Invalid value for `redistribute_static_route` ({0}), must be one of {1}"  # noqa: E501
                .format(redistribute_static_route, allowed_values)
            )

        self._redistribute_static_route = redistribute_static_route

    @property
    def route_aggregate(self):
        """Gets the route_aggregate of this ConfigOspfv3.  # noqa: E501

        域间路由汇聚列表  # noqa: E501

        :return: The route_aggregate of this ConfigOspfv3.  # noqa: E501
        :rtype: list[ConfigOspfv3RouteAggregate]
        """
        return self._route_aggregate

    @route_aggregate.setter
    def route_aggregate(self, route_aggregate):
        """Sets the route_aggregate of this ConfigOspfv3.

        域间路由汇聚列表  # noqa: E501

        :param route_aggregate: The route_aggregate of this ConfigOspfv3.  # noqa: E501
        :type: list[ConfigOspfv3RouteAggregate]
        """

        self._route_aggregate = route_aggregate

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ConfigOspfv3, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConfigOspfv3):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
