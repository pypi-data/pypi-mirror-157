{# ----------------------------------------------------------------------------
 # SymForce - Copyright 2022, Skydio, Inc.
 # This source code is under the Apache 2.0 license found in the LICENSE file.
 # ---------------------------------------------------------------------------- #}

    {# Handwritten methods for Rot2 #}
    {# These will get included into the autogenerated class header. #}
    def __init__(self, z=None):
        # type: (T.Sequence[float]) -> None
        if z is None:
            self.data = ops.GroupOps.identity().data  # type: T.List[float]
        else:
            assert len(z) == self.storage_dim()
            self.data = list(z)

    def to_rotation_matrix(self):
        # type: () -> np.ndarray
        {# TODO(aaron): codegen this #}
        real, imag = self.data

        return np.array([[real, -imag], [imag, real]])

    def _apply_to_vector(self, v):
        # type: (np.ndarray) -> np.ndarray
        v_reshaped = np.reshape(v, (2, 1))
        return np.reshape(np.matmul(self.to_rotation_matrix(), v_reshaped), v.shape)

    # TODO rotation helpers
