{# ----------------------------------------------------------------------------
 # SymForce - Copyright 2022, Skydio, Inc.
 # This source code is under the Apache 2.0 license found in the LICENSE file.
 # ---------------------------------------------------------------------------- #}

    {# Handwritten methods for Pose3 #}
    {# These will get included into the autogenerated class header. #}
    def __init__(self, R=None, t=None):
        # type: (Rot3, T.Sequence[float]) -> None
        rotation = R if R is not None else Rot3()
        position = t if t is not None else [0., 0., 0.]
        assert isinstance(rotation, Rot3)

        self.data = rotation.to_storage() + list(position)

    def rotation(self):
        # type: () -> Rot3
        return Rot3.from_storage(self.data[0:4])

    def position(self):
        # type: () -> np.ndarray
        return np.array(self.data[4:7])

    def _apply_to_vector(self, v):
        # type: (np.ndarray) -> np.ndarray
        v_reshaped = np.reshape(v, (3,))
        return np.reshape(
            np.dot(self.rotation().to_rotation_matrix(), v_reshaped) + self.position(), v.shape
        )
