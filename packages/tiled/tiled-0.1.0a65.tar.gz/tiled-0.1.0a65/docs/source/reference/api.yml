components:
  schemas:
    About:
      properties:
        aliases:
          additionalProperties:
            additionalProperties:
              items:
                type: string
              type: array
            type: object
          title: Aliases
          type: object
        api_version:
          title: Api Version
          type: integer
        authentication:
          $ref: '#/components/schemas/AboutAuthentication'
        formats:
          additionalProperties:
            items:
              type: string
            type: array
          title: Formats
          type: object
        library_version:
          title: Library Version
          type: string
        links:
          additionalProperties:
            type: string
          title: Links
          type: object
        meta:
          title: Meta
          type: object
        queries:
          items:
            type: string
          title: Queries
          type: array
      required:
      - api_version
      - library_version
      - formats
      - aliases
      - queries
      - authentication
      - links
      - meta
      title: About
      type: object
    AboutAuthentication:
      properties:
        links:
          $ref: '#/components/schemas/AboutAuthenticationLinks'
        providers:
          items:
            $ref: '#/components/schemas/AboutAuthenticationProvider'
          title: Providers
          type: array
        required:
          title: Required
          type: boolean
      required:
      - required
      - providers
      title: AboutAuthentication
      type: object
    AboutAuthenticationLinks:
      properties:
        apikey:
          title: Apikey
          type: string
        logout:
          title: Logout
          type: string
        refresh_session:
          title: Refresh Session
          type: string
        revoke_session:
          title: Revoke Session
          type: string
        whoami:
          title: Whoami
          type: string
      required:
      - whoami
      - apikey
      - refresh_session
      - revoke_session
      - logout
      title: AboutAuthenticationLinks
      type: object
    AboutAuthenticationProvider:
      properties:
        confirmation_message:
          title: Confirmation Message
          type: string
        links:
          additionalProperties:
            type: string
          title: Links
          type: object
        mode:
          $ref: '#/components/schemas/AuthenticationMode'
        provider:
          title: Provider
          type: string
      required:
      - provider
      - mode
      - links
      title: AboutAuthenticationProvider
      type: object
    AuthenticationMode:
      description: An enumeration.
      enum:
      - password
      - external
      title: AuthenticationMode
      type: string
    EntryFields:
      description: An enumeration.
      enum:
      - metadata
      - structure_family
      - structure.micro
      - structure.macro
      - count
      - sorting
      - specs
      - ''
      title: EntryFields
      type: string
    Error:
      properties:
        code:
          title: Code
          type: integer
        message:
          title: Message
          type: string
      required:
      - code
      - message
      title: Error
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    NodeAttributes:
      properties:
        ancestors:
          items:
            type: string
          title: Ancestors
          type: array
        count:
          title: Count
          type: integer
        metadata:
          title: Metadata
          type: object
        sorting:
          items:
            $ref: '#/components/schemas/SortingItem'
          title: Sorting
          type: array
        specs:
          items:
            type: string
          title: Specs
          type: array
        structure:
          $ref: '#/components/schemas/Structure'
        structure_family:
          $ref: '#/components/schemas/StructureFamily'
      required:
      - ancestors
      title: NodeAttributes
      type: object
    Resource_NodeAttributes__dict__dict_:
      description: A JSON API Resource
      properties:
        attributes:
          $ref: '#/components/schemas/NodeAttributes'
        id:
          anyOf:
          - type: string
          - format: uuid
            type: string
          title: Id
        links:
          title: Links
          type: object
        meta:
          title: Meta
          type: object
      required:
      - id
      - attributes
      title: Resource[NodeAttributes, dict, dict]
      type: object
    Response:
      properties:
        data:
          title: Data
        error:
          $ref: '#/components/schemas/Error'
        links:
          title: Links
        meta:
          title: Meta
      title: Response
      type: object
    Response_Resource_NodeAttributes__dict__dict___dict__dict_:
      properties:
        data:
          $ref: '#/components/schemas/Resource_NodeAttributes__dict__dict_'
        error:
          $ref: '#/components/schemas/Error'
        links:
          title: Links
          type: object
        meta:
          title: Meta
          type: object
      title: Response[Resource[NodeAttributes, dict, dict], dict, dict]
      type: object
    SortingDirection:
      description: An enumeration.
      enum:
      - 1
      - -1
      title: SortingDirection
      type: integer
    SortingItem:
      properties:
        direction:
          $ref: '#/components/schemas/SortingDirection'
        key:
          title: Key
          type: string
      required:
      - key
      - direction
      title: SortingItem
      type: object
    Structure:
      properties:
        macro:
          title: Macro
          type: object
        micro:
          title: Micro
          type: object
      title: Structure
      type: object
    StructureFamily:
      description: An enumeration.
      enum:
      - node
      - array
      - dataframe
      - xarray_data_array
      - xarray_dataset
      title: StructureFamily
      type: string
    ValidationError:
      properties:
        loc:
          items:
            type: string
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
  securitySchemes:
    APIKeyAuthorizationHeader:
      description: Prefix value with 'Apikey ' as in, 'Apikey SECRET'
      in: header
      name: Authorization
      type: apiKey
    APIKeyCookie:
      in: cookie
      name: tiled_api_key
      type: apiKey
    APIKeyQuery:
      in: query
      name: api_key
      type: apiKey
    OAuth2PasswordBearer:
      flows:
        password:
          refreshUrl: token/refresh
          scopes: {}
          tokenUrl: PLACEHOLDER
      type: oauth2
info:
  description: Structured data access service
  title: Tiled
  version: 0.1.0a63.post11.dev0+g1b04892
openapi: 3.0.2
paths:
  /:
    get:
      operationId: index__get
      responses:
        '200':
          content:
            text/html:
              schema:
                type: string
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      - APIKeyQuery: []
      - APIKeyAuthorizationHeader: []
      - APIKeyCookie: []
      summary: Index
  /api/:
    get:
      operationId: about_api__get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/About'
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      - APIKeyQuery: []
      - APIKeyAuthorizationHeader: []
      - APIKeyCookie: []
      summary: About
  /api/array/block/{path}:
    get:
      description: Fetch a chunk of array-like data.
      operationId: array_block_api_array_block__path__get
      parameters:
      - in: path
        name: path
        required: true
        schema:
          title: Path
          type: string
      - in: query
        name: format
        required: false
        schema:
          title: Format
          type: string
      - in: query
        name: filename
        required: false
        schema:
          title: Filename
          type: string
      - in: query
        name: block
        required: true
        schema:
          pattern: ^[0-9]*(,[0-9]+)*$
          title: Block
          type: string
      - in: query
        name: slice
        required: false
        schema:
          pattern: ^[-0-9,:]*$
          title: Slice
          type: string
      - in: query
        name: expected_shape
        required: false
        schema:
          minLength: 1
          pattern: ^[0-9]+(,[0-9]+)*$|^scalar$
          title: Expected Shape
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer:
        - read:data
      - APIKeyQuery: []
      - APIKeyAuthorizationHeader: []
      - APIKeyCookie: []
      summary: Array Block
  /api/array/full/{path}:
    get:
      description: Fetch a slice of array-like data.
      operationId: full_array_api_array_full__path__get
      parameters:
      - in: path
        name: path
        required: true
        schema:
          title: Path
          type: string
      - in: query
        name: format
        required: false
        schema:
          title: Format
          type: string
      - in: query
        name: filename
        required: false
        schema:
          title: Filename
          type: string
      - in: query
        name: slice
        required: false
        schema:
          pattern: ^[-0-9,:]*$
          title: Slice
          type: string
      - in: query
        name: expected_shape
        required: false
        schema:
          minLength: 1
          pattern: ^[0-9]+(,[0-9]+)*$|^scalar$
          title: Expected Shape
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer:
        - read:data
      - APIKeyQuery: []
      - APIKeyAuthorizationHeader: []
      - APIKeyCookie: []
      summary: Full Array
  /api/dataframe/partition/{path}:
    get:
      description: Fetch a partition (continuous block of rows) from a DataFrame.
      operationId: dataframe_partition_api_dataframe_partition__path__get
      parameters:
      - in: path
        name: path
        required: true
        schema:
          title: Path
          type: string
      - in: query
        name: partition
        required: true
        schema:
          title: Partition
          type: integer
      - in: query
        name: field
        required: false
        schema:
          items:
            minLength: 1
            type: string
          minLength: 1
          title: Field
          type: array
      - in: query
        name: format
        required: false
        schema:
          title: Format
          type: string
      - in: query
        name: filename
        required: false
        schema:
          title: Filename
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer:
        - read:data
      - APIKeyQuery: []
      - APIKeyAuthorizationHeader: []
      - APIKeyCookie: []
      summary: Dataframe Partition
  /api/node/full/{path}:
    get:
      description: Fetch the data below the given node.
      operationId: full_generic__node___dataframe__or_xarray_Dataset_api_node_full__path__get
      parameters:
      - in: path
        name: path
        required: true
        schema:
          title: Path
          type: string
      - in: query
        name: field
        required: false
        schema:
          items:
            minLength: 1
            type: string
          minLength: 1
          title: Field
          type: array
      - in: query
        name: format
        required: false
        schema:
          title: Format
          type: string
      - in: query
        name: filename
        required: false
        schema:
          title: Filename
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer:
        - read:data
      - APIKeyQuery: []
      - APIKeyAuthorizationHeader: []
      - APIKeyCookie: []
      summary: Full Generic 'Node', Dataframe, Or Xarray Dataset
  /api/node/metadata/{path}:
    get:
      description: Fetch the metadata and structure information for one entry.
      operationId: node_metadata_api_node_metadata__path__get
      parameters:
      - in: path
        name: path
        required: true
        schema:
          title: Path
          type: string
      - in: query
        name: fields
        required: false
        schema:
          default:
          - metadata
          - structure_family
          - structure.micro
          - structure.macro
          - count
          - sorting
          - specs
          - ''
          items:
            $ref: '#/components/schemas/EntryFields'
          type: array
      - in: query
        name: select_metadata
        required: false
        schema:
          title: Select Metadata
          type: string
      - in: query
        name: omit_links
        required: false
        schema:
          default: false
          title: Omit Links
          type: boolean
      - in: query
        name: root_path
        required: false
        schema:
          default: false
          title: Root Path
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Resource_NodeAttributes__dict__dict___dict__dict_'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer:
        - read:metadata
      - APIKeyQuery: []
      - APIKeyAuthorizationHeader: []
      - APIKeyCookie: []
      summary: Node Metadata
  /ui/{path}:
    get:
      operationId: ui_ui__path__get
      parameters:
      - in: path
        name: path
        required: true
        schema:
          title: Path
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Ui
